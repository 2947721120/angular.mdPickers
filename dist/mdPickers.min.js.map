{"version":3,"sources":["mdPickers.min.js"],"names":["TimePickerCtrl","$scope","$mdDialog","currentDate","$mdMedia","self","this","VIEW_HOURS","VIEW_MINUTES","currentView","currentMoment","moment","clockHours","parseInt","format","clockMinutes","minutes","$watch","newValue","oldValue","angular","isDefined","hour","setAM","setPM","now","cancel","confirm","hide","toDate","ClockCtrl","TYPE_HOURS","TYPE_MINUTES","STEP_DEG","steps","selected","CLOCK_TYPES","hours","range","getPointerStyle","divider","type","degrees","Math","round","-webkit-transform","-ms-transform","transform","setTimeByDeg","deg","setTime","time","date","init","i","push","DatePickerCtrl","$timeout","selectingYear","yearItems","currentIndex_","PAGE_SIZE","START","getItemAtIndex","index","getLength","floor","year","selectYear","animate","showYear","yearTopIndex","showCalendar","today","animating","noop","then","CalendarCtrl","weekDays","weekdaysMin","getDaysInMonth","days","daysInMonth","firstDay","day","arr","selectDate","dom","nextMonth","add","prevMonth","subtract","module","directive","$animate","restrict","scope","replace","template","controller","controllerAs","link","element","attrs","ctrl","container","querySelector","onEvent","event","target","x","offsetWidth","offsetX","y","offsetY","offsetHeight","atan2","PI","on","off","$on","provider","LABEL_OK","LABEL_CANCEL","LABEL_NOW","setOKButtonLabel","label","setCancelButtonLabel","$get","timePicker","targetEvent","isDate","Date","show","clickOutsideToClose","locals","LABEL_TODAY","datePicker","animElements","map","a","direction","addClass","removeClass","$mdpDatePicker","require","ngModel","ev","preventDefault","$modelValue","selectedDate","$setViewValue","$render"],"mappings":"CAAA,WACA,YAMA,SAASA,GAAeC,EAAQC,EAAWC,EAAaC,GACvD,GAAIC,GAAOC,IACRA,MAAKC,WAAa,EAClBD,KAAKE,aAAe,EACpBF,KAAKH,YAAcA,EACnBG,KAAKG,YAAcH,KAAKC,WACxBD,KAAKI,cAAgBC,OAAON,EAAKF,aAEjCG,KAAKM,WAAaC,SAASP,KAAKI,cAAcI,OAAO,MACrDR,KAAKS,aAAeF,SAASP,KAAKI,cAAcM,WAEhDf,EAAOgB,OAAO,WAAa,MAAOZ,GAAKO,YAAc,SAASM,EAAUC,GACjEC,QAAQC,UAAUF,KACoB,MAAlCd,EAAKK,cAAcI,OAAO,KACzBT,EAAKK,cAAcY,KAAKjB,EAAKO,YAE7BP,EAAKK,cAAcY,KAAKjB,EAAKO,WAAa,GAAKP,EAAKO,WAAa,GAAKP,EAAKO,eAItFX,EAAOgB,OAAO,WAAa,MAAOZ,GAAKU,cAAgB,SAASG,EAAUC,GACpEC,QAAQC,UAAUF,IACjBd,EAAKK,cAAcM,QAAmB,GAAXE,EAAgBA,EAAW,KAIjEjB,EAAOG,SAAWA,EAElBE,KAAKiB,MAAQ,WAC+B,MAAlClB,EAAKK,cAAcI,OAAO,MACzBT,EAAKK,cAAcY,KAAKjB,EAAKK,cAAcY,OAAS,KAG5DhB,KAAKkB,MAAQ,WAC4B,MAAlCnB,EAAKK,cAAcI,OAAO,MACzBT,EAAKK,cAAcY,KAAKjB,EAAKK,cAAcY,OAAS,KAG/DhB,KAAKmB,IAAM,WACVpB,EAAKK,cAAgBC,UAGnBL,KAAKoB,OAAS,WACVxB,EAAUwB,UAGdpB,KAAKqB,QAAU,WACXzB,EAAU0B,KAAKtB,KAAKI,cAAcmB,WAI1C,QAASC,GAAU7B,GACf,GAAI8B,GAAa,QACbC,EAAe,SAEnB1B,MAAK2B,SAAW,EAChB,IAAI5B,GAAOC,IACXA,MAAK4B,SACL5B,KAAK6B,SAAW,EAEhB7B,KAAK8B,aACDC,OACIC,MAAO,IAEXtB,SACIsB,MAAO,KAIfhC,KAAKiC,gBAAkB,WACnB,GAAIC,GAAU,CACd,QAAOnC,EAAKoC,MACR,IAAKV,GACDS,EAAU,EACV,MACJ,KAAKR,GACDQ,EAAU,GAGlB,GAAIE,GAAUC,KAAKC,MAAMvC,EAAK8B,UAAY,IAAMK,IAAY,GAC5D,QACIK,oBAAqB,UAAYH,EAAU,OAC3CI,gBAAiB,UAAYJ,EAAU,OACvCK,UAAa,UAAYL,EAAU,SAI3CpC,KAAK0C,aAAe,SAASC,GACzBA,EAAMA,GAAO,IAAM,EAAIA,CACvB,IAAIT,GAAU,CACd,QAAOnC,EAAKoC,MACR,IAAKV,GACDS,EAAU,EACV,MACJ,KAAKR,GACDQ,EAAU,GAIlBnC,EAAK6C,QACDP,KAAKC,MAAMJ,EAAU,IAAMS,KAInC3C,KAAK4C,QAAU,SAASC,EAAMV,GAM1B,OALAnC,KAAK6B,SAAWgB,EACXV,IACJA,EAAOpC,EAAKoC,MAGNA,GACP,IAAKV,GACJ9B,EAAOmD,KAAKf,MAAMc,EACf,MACJ,KAAKnB,GACJ/B,EAAOmD,KAAKpC,QAAQmC,KAKzB7C,KAAK+C,KAAO,SAASZ,GAEjB,OADApC,EAAKoC,KAAOA,EACLA,GACH,IAAKV,GACD,IAAI,GAAIuB,GAAI,EAAQ,IAALA,EAASA,IACpBjD,EAAK6B,MAAMqB,KAAKD,EACpBjD,GAAK8B,SAAWlC,EAAOmD,KAAKf,SAAW,CAEvC,MACJ,KAAKL,GACD,IAAI,GAAIsB,GAAI,EAAQ,IAALA,EAASA,GAAG,EACvBjD,EAAK6B,MAAMqB,KAAKD,EACpBjD,GAAK6B,MAAMqB,KAAK,GAChBlD,EAAK8B,SAAWlC,EAAOmD,KAAKpC,WAAa,IAMrDf,EAAOgB,OAAO,OAAQ,SAASC,EAAUC,GACxCd,EAAK6C,QAAQhC,EAASmB,QAASN,GAC/B1B,EAAK6C,QAAQhC,EAASF,UAAWgB,KAyHtC,QAASwB,GAAevD,EAAQC,EAAWC,EAAaC,EAAUqD,GAC9D,GAAIpD,GAAOC,IAEXA,MAAKH,YAAcA,EACnBG,KAAKI,cAAgBC,OAAON,EAAKF,aACjCG,KAAKoD,eAAgB,EAErBzD,EAAOG,SAAWA,EAClBE,KAAKqD,WACDC,cAAe,EACfC,UAAW,EACXC,MAAO,KACPC,eAAgB,SAASC,GAGrB,MAFG1D,MAAKsD,cAAgBI,IACpB1D,KAAKsD,cAAgBI,GAClB1D,KAAKwD,MAAQE,GAExBC,UAAW,WACP,MAAO3D,MAAKsD,cAAgBjB,KAAKuB,MAAM5D,KAAKuD,UAAY,KAIhE5D,EAAOkE,KAAO7D,KAAKI,cAAcyD,OAEpC7D,KAAK8D,WAAa,SAASD,GACpB9D,EAAKK,cAAcyD,KAAKA,GACxBlE,EAAOkE,KAAOA,EACd9D,EAAKqD,eAAgB,EACrBrD,EAAKgE,WAGT/D,KAAKgE,SAAW,WACZjE,EAAKkE,aAAgBlE,EAAKK,cAAcyD,OAAS9D,EAAKsD,UAAUG,MAASnB,KAAKuB,MAAM7D,EAAKsD,UAAUE,UAAY,GAC/GxD,EAAKsD,UAAUC,cAAiBvD,EAAKK,cAAcyD,OAAS9D,EAAKsD,UAAUG,MAAS,EACpFzD,EAAKqD,eAAgB,GAGzBpD,KAAKkE,aAAe,WAChBnE,EAAKqD,eAAgB,GAGzBpD,KAAKmE,MAAQ,WACZpE,EAAKK,cAAgBC,SACrBL,KAAK8D,WAAW/D,EAAKK,cAAcyD,SAGpC7D,KAAKoB,OAAS,WACVxB,EAAUwB,UAGdpB,KAAKqB,QAAU,WACXzB,EAAU0B,KAAKtB,KAAKI,cAAcmB,WAGtCvB,KAAK+D,QAAU,WACXhE,EAAKqE,WAAY,EACjBjB,EAASrC,QAAQuD,MAAMC,KAAK,WACxBvE,EAAKqE,WAAY,KA+D7B,QAASG,GAAa5E,GAClBK,KAAKwE,SAAWnE,OAAOoE,cAEvBzE,KAAK0E,eAAiB,WAKlB,IAAI,GAJAC,GAAOhF,EAAOmD,KAAK8B,cACtBC,EAAWxE,OAAOV,EAAOmD,MAAMA,KAAK,GAAGgC,MAEpCC,KACI/B,EAAI,EAAS6B,EAAWF,GAAjB3B,EAAwBA,IACnC+B,EAAI9B,KAAKD,EAAI6B,EAAY7B,EAAI6B,GAAY,EAE7C,OAAOE,IAGX/E,KAAKgF,WAAa,SAASC,GAC1BtF,EAAOmD,KAAKA,KAAKmC,IAGlBjF,KAAKkF,UAAY,WAChBvF,EAAOmD,KAAKqC,IAAI,EAAG,WAGpBnF,KAAKoF,UAAY,WAChBzF,EAAOmD,KAAKuC,SAAS,EAAG,WA1Z7B,GAAIC,GAASxE,QAAQwE,OAAO,aAC3B,aACA,YACA,UAmJDA,GAAOC,UAAU,YAAa,WAAY,WAAY,SAASC,EAAUrC,GACrE,OACIsC,SAAU,IACVC,OACIvD,KAAQ,KACRW,KAAS,KAEb6C,SAAS,EACTC,SAAU,khBASVC,YAAa,SAAUrE,GACvBsE,aAAc,QACdC,KAAM,SAASL,EAAOM,EAASC,EAAOC,GAElC,GAAIC,GAAYrF,QAAQkF,QAAQA,EAAQ,GAAGI,cAAc,wBAC3CtF,SAAQkF,QAAQA,EAAQ,GAAGI,cAAc,gBAEvDV,GAAMvD,KAAOuD,EAAMvD,MAAQ,QAC3BgB,EAAS,WACR+C,EAAKnD,KAAK2C,EAAMvD,OAGjB,IAAIkE,GAAU,SAASC,GACnB,GAAGA,EAAMC,QAAUJ,EAAU,GAA7B,CACA,GAAIK,GAAMF,EAAMC,OAAOE,YAAc,EAAKH,EAAMI,QAC5CC,EAAKL,EAAMM,QAAWN,EAAMC,OAAOM,aAAe,EAElDlE,EAAMN,KAAKC,MAAOD,KAAKyE,MAAMN,EAAGG,IAAM,IAAMtE,KAAK0E,IACrD5D,GAAS,WACL+C,EAAKxD,aAAaC,EAAM,QAIhCwD,GAAUa,GAAG,YAAa,WACvBb,EAAUa,GAAG,YAAaX,KAG7BF,EAAUa,GAAG,mBAAoB,WAC9Bb,EAAUc,IAAI,YAAaZ,KAG9BF,EAAUa,GAAG,QAASX,GACtBX,EAAMwB,IAAI,WAAY,WAClBf,EAAUc,IAAI,QAASZ,GACvBF,EAAUc,IAAI,YAAaZ,UAM3Cf,EAAO6B,SAAS,iBAAkB,WAC9B,GAAIC,GAAW,KACXC,EAAe,SACfC,EAAY,KAEhBtH,MAAKuH,iBAAmB,SAASC,GAC7BJ,EAAWI,GAGfxH,KAAKyH,qBAAuB,SAASD,GACjCH,EAAeG,GAGnBxH,KAAK0H,MAAQ,YAAa,SAAS9H,GAC/B,GAAI+H,GAAa,SAASC,EAAa/H,GAGnC,MAFIiB,SAAQ+G,OAAOhI,KAAcA,EAAciI,KAAK3G,OAE7CvB,EAAUmI,MACblC,YAAc,SAAU,YAAa,cAAe,WAAYnG,GAChEoG,aAAc,aACdkC,qBAAqB,EACrBpC,SAAU,6+CAmBqH0B,EAAY,KAAOA,EAAY,uFAE3ED,EAAe,KAAOA,EAAe,yFACjBD,EAAW,KAAOA,EAAW,yEAKpIQ,YAAaA,EACbK,QACIpI,YAAaA,KAKzB,OAAO8H,OAmEfrC,EAAO6B,SAAS,iBAAkB,WAC9B,GAAIC,GAAW,KACXC,EAAe,SACfa,EAAc,OAElBlI,MAAKuH,iBAAmB,SAASC,GAC7BJ,EAAWI,GAGfxH,KAAKyH,qBAAuB,SAASD,GACjCH,EAAeG,GAGnBxH,KAAK0H,MAAQ,YAAa,SAAS9H,GAC/B,GAAIuI,GAAa,SAASP,EAAa/H,GAGnC,MAFIiB,SAAQ+G,OAAOhI,KAAcA,EAAciI,KAAK3G,OAE7CvB,EAAUmI,MACblC,YAAc,SAAU,YAAa,cAAe,WAAY,WAAY3C,GAC5E4C,aAAc,aACdkC,qBAAqB,EACrBpC,SAAU,64CAkBuHsC,EAAc,KAAOA,EAAc,uFAEjFb,EAAe,KAAOA,EAAe,yFACjBD,EAAW,KAAOA,EAAW,yEAKpIQ,YAAaA,EACbK,QACIpI,YAAaA,KAKzB,OAAOsI,OA+Bf7C,EAAOC,UAAU,eAAgB,WAAY,SAASC,GAClD,OACIC,SAAU,IACVC,OACI5C,KAAQ,KAEZ8C,SAAU,49CAkBVC,YAAa,SAAUtB,GACvBuB,aAAc,WACdC,KAAM,SAASL,EAAOM,EAASC,EAAOC,GAClC,GAAIkC,IACApC,EAAQ,GAAGI,cAAc,2BACzBJ,EAAQ,GAAGI,cAAc,sBACzBJ,EAAQ,GAAGI,cAAc,2BAE7BgC,GAAeA,EAAaC,IAAI,SAASC,GACtC,MAAOxH,SAAQkF,QAAQsC,KAG1B5C,EAAM/E,OAAO,WAAa,MAAQ+E,GAAM5C,KAAKtC,OAAO,WAAa,SAASI,EAAUC,GAChF,GAAI0H,GAAY,IAOhB,IALG3H,EAAWC,EACV0H,EAAY,mBACG1H,EAAXD,IACJ2H,EAAY,oBAEbA,EACC,IAAI,GAAIvF,KAAKoF,GACTA,EAAapF,GAAGwF,SAASD,GACzB/C,EAASiD,YAAYL,EAAapF,GAAIuF,UAQ9DjD,EAAOC,UAAU,iBAAkB,iBAAkB,WAAY,SAASmD,EAAgBvF,GACtF,OACIsC,SAAU,IACVkD,QAAS,WACT5C,KAAM,SAASL,EAAOM,EAASC,EAAO2C,GAC9B,mBAAuB3C,GAAM9D,MAAQ,SAAW8D,EAAM9D,MAAQyG,GAC9D9H,QAAQkF,QAAQA,GAASgB,GAAG,QAAS,SAAS6B,GAC1CA,EAAGC,iBACDJ,EAAeG,EAAID,EAAQG,aAAazE,KAAK,SAAS0E,GAClD7F,EAAS,WACNyF,EAAQK,cAAc5I,OAAO2I,GAAcxI,OAAO,eAClDoI,EAAQM","file":"mdPickers.min.js","sourcesContent":["(function() {\n\"use strict\";\nvar module = angular.module(\"mdPickers\", [\n\t\"ngMaterial\",\n\t\"ngAnimate\",\n\t\"ngAria\"\n]); \nfunction TimePickerCtrl($scope, $mdDialog, currentDate, $mdMedia) {\n\tvar self = this;\n    this.VIEW_HOURS = 1;\n    this.VIEW_MINUTES = 2;\n    this.currentDate = currentDate;\n    this.currentView = this.VIEW_HOURS;\n    this.currentMoment = moment(self.currentDate);\n    \n    this.clockHours = parseInt(this.currentMoment.format(\"h\"));\n    this.clockMinutes = parseInt(this.currentMoment.minutes());\n\t\n    $scope.$watch(function() { return self.clockHours }, function(newValue, oldValue) {\n        if(angular.isDefined(oldValue)) {\n            if(self.currentMoment.format(\"A\") == \"AM\")\n                self.currentMoment.hour(self.clockHours);\n            else\n                self.currentMoment.hour(self.clockHours < 12 ? self.clockHours + 12 : self.clockHours);\n        }\n    });\n    \n     $scope.$watch(function() { return self.clockMinutes }, function(newValue, oldValue) {\n        if(angular.isDefined(oldValue)) {\n            self.currentMoment.minutes(newValue < 60 ? newValue : 0);\n        }\n    });\n    \n\t$scope.$mdMedia = $mdMedia;\n    \n\tthis.setAM = function() {\n        if(self.currentMoment.format(\"A\") == \"PM\")\n            self.currentMoment.hour(self.currentMoment.hour() - 12);\n\t};\n    \n    this.setPM = function() {\n        if(self.currentMoment.format(\"A\") == \"AM\")\n            self.currentMoment.hour(self.currentMoment.hour() + 12);\n\t};\n\t\n\tthis.now = function() {\n\t\tself.currentMoment = moment();\n\t};\n    \n    this.cancel = function() {\n        $mdDialog.cancel();\n    };\n\n    this.confirm = function() {\n        $mdDialog.hide(this.currentMoment.toDate());\n    };\n}\n\nfunction ClockCtrl($scope) {\n    var TYPE_HOURS = \"hours\";\n    var TYPE_MINUTES = \"minutes\";\n    \n    this.STEP_DEG = 360 / 12;\n    var self = this;\n    this.steps = [];\n    this.selected = 0;\n    \n    this.CLOCK_TYPES = {\n        \"hours\": {\n            range: 12,\n        },\n        \"minutes\": {\n            range: 60,\n        }\n    }\n    \n    this.getPointerStyle = function() {\n        var divider = 1;\n        switch(self.type) {\n            case TYPE_HOURS:\n                divider = 12;\n                break;\n            case TYPE_MINUTES:\n                divider = 60;\n                break;\n        }  \n        var degrees = Math.round(self.selected * (360 / divider)) - 180;\n        return { \n            \"-webkit-transform\": \"rotate(\" + degrees + \"deg)\",\n            \"-ms-transform\": \"rotate(\" + degrees + \"deg)\",\n            \"transform\": \"rotate(\" + degrees + \"deg)\"\n        }\n    };\n    \n    this.setTimeByDeg = function(deg) {\n        deg = deg >= 360 ? 0 : deg;\n        var divider = 0;\n        switch(self.type) {\n            case TYPE_HOURS:\n                divider = 12;\n                break;\n            case TYPE_MINUTES:\n                divider = 60;\n                break;\n        }  \n        \n        self.setTime(\n            Math.round(divider / 360 * deg)\n        );\n    };\n    \n    this.setTime = function(time, type) {\n        this.selected = time;\n        if (!type) {\n        \ttype = self.type;\n        }\n        \n        switch(type) {\n        case TYPE_HOURS:\n        \t$scope.date.hours(time);\n            break;\n        case TYPE_MINUTES:\n        \t$scope.date.minutes(time);\n            break;\n        }\n    };\n    \n    this.init = function(type) {\n        self.type = type;\n        switch(type) {\n            case TYPE_HOURS:\n                for(var i = 1; i <= 12; i++)\n                    self.steps.push(i);\n                self.selected = $scope.date.hours() || 0;\n                    \n                break;\n            case TYPE_MINUTES:\n                for(var i = 5; i <= 55; i+=5)\n                    self.steps.push(i);\n                self.steps.push(0);\n                self.selected = $scope.date.minutes() || 0;\n                \n                break;\n        }\n    };\n    \n    $scope.$watch('date', function(newValue, oldValue) {\n    \tself.setTime(newValue.hours(), TYPE_HOURS);\n    \tself.setTime(newValue.minutes(), TYPE_MINUTES);\n    });\n}\n\nmodule.directive(\"mdpClock\", [\"$animate\", \"$timeout\", function($animate, $timeout) {\n    return {\n        restrict: 'E',\n        scope: {\n            'type': '@?',\n            'date' : '='\n        },\n        replace: true,\n        template: '<div class=\"mdp-clock\">' +\n                        '<div class=\"mdp-clock-container\">' +\n                            '<md-toolbar class=\"mdp-clock-center md-primary\"></md-toolbar>' +\n                            '<md-toolbar ng-style=\"clock.getPointerStyle()\" class=\"mdp-pointer md-primary\">' +\n                                '<span class=\"mdp-clock-selected md-button md-raised md-primary\"></span>' +\n                            '</md-toolbar>' +\n                            '<md-button ng-class=\"{ \\'md-primary\\': clock.selected == step }\" class=\"md-icon-button md-raised mdp-clock-deg{{ ::(clock.STEP_DEG * ($index + 1)) }}\" ng-repeat=\"step in clock.steps\" ng-click=\"clock.setTime(step)\">{{ step }}</md-button>' +\n                        '</div>' +\n                    '</div>',\n        controller: [\"$scope\", ClockCtrl],\n        controllerAs: \"clock\",\n        link: function(scope, element, attrs, ctrl) {\n                \n            var container = angular.element(element[0].querySelector(\".mdp-clock-container\")),\n                pointer = angular.element(element[0].querySelector(\".mdp-pointer\"));\n            \n            scope.type = scope.type || \"hours\";\n            $timeout(function() {\n            \tctrl.init(scope.type);\n            });\n            \n            var onEvent = function(event) {\n                if(event.target != container[0]) return;\n                var x = ((event.target.offsetWidth / 2) - event.offsetX),\n                    y = (event.offsetY - (event.target.offsetHeight / 2));\n\n                var deg = Math.round((Math.atan2(x, y) * (180 / Math.PI)));\n                $timeout(function() {\n                    ctrl.setTimeByDeg(deg + 180);\n                });\n            }; \n            \n            container.on(\"mousedown\", function() {\n               container.on(\"mousemove\", onEvent);\n            });\n            \n            container.on(\"mouseup mouseout\", function() {\n               container.off(\"mousemove\", onEvent);\n            });\n            \n            container.on(\"click\", onEvent);\n            scope.$on(\"$destroy\", function() {\n                container.off(\"click\", onEvent);\n                container.off(\"mousemove\", onEvent); \n            });\n        }\n    }\n}]);\n\nmodule.provider(\"$mdpTimePicker\", function() {\n    var LABEL_OK = \"OK\",\n        LABEL_CANCEL = \"Cancel\",\n        LABEL_NOW = \"Now\"; \n        \n    this.setOKButtonLabel = function(label) {\n        LABEL_OK = label;\n    };\n    \n    this.setCancelButtonLabel = function(label) {\n        LABEL_CANCEL = label;\n    };\n    \n    this.$get = [\"$mdDialog\", function($mdDialog) {\n        var timePicker = function(targetEvent, currentDate) {\n            if(!angular.isDate(currentDate)) currentDate = Date.now();\n    \n            return $mdDialog.show({\n                controller:  ['$scope', '$mdDialog', 'currentDate', '$mdMedia', TimePickerCtrl],\n                controllerAs: 'timepicker',\n                clickOutsideToClose: true,\n                template: '<md-dialog aria-label=\"\" class=\"mdp-timepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\n                            '<md-dialog-content layout-gt-xs=\"row\" layout-wrap>' +\n                                '<md-toolbar layout-gt-xs=\"column\" layout-xs=\"row\" layout-align=\"center center\" flex class=\"mdp-timepicker-time md-hue-1 md-primary\">' +\n                                    '<div class=\"mdp-timepicker-selected-time\">' +\n                                        '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_HOURS }\" ng-click=\"timepicker.currentView = timepicker.VIEW_HOURS\">{{ timepicker.currentMoment.format(\"h\") }}</span>:' + \n                                        '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_MINUTES }\" ng-click=\"timepicker.currentView = timepicker.VIEW_MINUTES\">{{ timepicker.currentMoment.format(\"mm\") }}</span>' +\n                                    '</div>' +\n                                    '<div layout=\"column\" class=\"mdp-timepicker-selected-ampm\">' + \n                                        '<span ng-click=\"timepicker.setAM()\" ng-class=\"{ \\'active\\': timepicker.currentMoment.format(\\'A\\') == \\'AM\\' }\">AM</span>' +\n                                        '<span ng-click=\"timepicker.setPM()\" ng-class=\"{ \\'active\\': timepicker.currentMoment.format(\\'A\\') == \\'PM\\' }\">PM</span>' +\n                                    '</div>' + \n                                '</md-toolbar>' +\n                                '<div>' +\n                                    '<div class=\"mdp-clock-switch-container\" ng-switch=\"timepicker.currentView\" layout layout-align=\"center center\">' +\n\t                                    '<mdp-clock class=\"mdp-animation-zoom\" date=\"timepicker.currentMoment\" type=\"hours\" ng-switch-when=\"1\"></mdp-clock>' +\n\t                                    '<mdp-clock class=\"mdp-animation-zoom\" date=\"timepicker.currentMoment\" type=\"minutes\" ng-switch-when=\"2\"></mdp-clock>' +\n                                    '</div>' +\n                                    \n                                    '<md-dialog-actions layout=\"row\">' +\n\t                                    '<md-button ng-class=\"{\\'md-icon-button\\': $mdMedia(\\'xs\\')}\" ng-click=\"timepicker.now()\" aria-label=\"' + LABEL_NOW + '\">' + LABEL_NOW + '</md-button>' +\n\t                                \t'<span flex></span>' +\n                                        '<md-button ng-click=\"timepicker.cancel()\" aria-label=\"' + LABEL_CANCEL + '\">' + LABEL_CANCEL + '</md-button>' +\n                                        '<md-button ng-click=\"timepicker.confirm()\" class=\"md-primary\" aria-label=\"' + LABEL_OK + '\">' + LABEL_OK + '</md-button>' +\n                                    '</md-dialog-actions>' +\n                                '</div>' +\n                            '</md-dialog-content>' +\n                        '</md-dialog>',\n                targetEvent: targetEvent,\n                locals: {\n                    currentDate: currentDate\n                }\n            });\n        };\n    \n        return timePicker;\n    }];\n});\n/* global = */\n\nfunction DatePickerCtrl($scope, $mdDialog, currentDate, $mdMedia, $timeout) {\n    var self = this;\n\n    this.currentDate = currentDate;\n    this.currentMoment = moment(self.currentDate);\n    this.selectingYear = false;\n\n    $scope.$mdMedia = $mdMedia;\n    this.yearItems = {\n        currentIndex_: 0,\n        PAGE_SIZE: 5,\n        START: 1900,\n        getItemAtIndex: function(index) {\n            if(this.currentIndex_ < index)\n                this.currentIndex_ = index;\n            return this.START + index;\n        },\n        getLength: function() {\n            return this.currentIndex_ + Math.floor(this.PAGE_SIZE / 2);\n        }\n    }\n    \n    $scope.year = this.currentMoment.year();\n\n\tthis.selectYear = function(year) {\n        self.currentMoment.year(year);\n        $scope.year = year;\n        self.selectingYear = false;\n        self.animate();\n    };\n    \n    this.showYear = function() { \n        self.yearTopIndex = (self.currentMoment.year() - self.yearItems.START) + Math.floor(self.yearItems.PAGE_SIZE / 2);\n        self.yearItems.currentIndex_ = (self.currentMoment.year() - self.yearItems.START) + 1;\n        self.selectingYear = true;\n    };\n    \n    this.showCalendar = function() {\n        self.selectingYear = false;\n    };\n    \n    this.today = function() {\n    \tself.currentMoment = moment();\n    \tthis.selectYear(self.currentMoment.year());\n    };\n\n    this.cancel = function() {\n        $mdDialog.cancel();\n    };\n\n    this.confirm = function() {\n        $mdDialog.hide(this.currentMoment.toDate());\n    };\n    \n    this.animate = function() {\n        self.animating = true;\n        $timeout(angular.noop).then(function() {\n            self.animating = false;\n        })  \n    };\n}\n\nmodule.provider(\"$mdpDatePicker\", function() {\n    var LABEL_OK = \"OK\",\n        LABEL_CANCEL = \"Cancel\",\n        LABEL_TODAY = \"Today\"; \n        \n    this.setOKButtonLabel = function(label) {\n        LABEL_OK = label;\n    };\n    \n    this.setCancelButtonLabel = function(label) {\n        LABEL_CANCEL = label;\n    };\n    \n    this.$get = [\"$mdDialog\", function($mdDialog) {\n        var datePicker = function(targetEvent, currentDate) {\n            if(!angular.isDate(currentDate)) currentDate = Date.now();\n    \n            return $mdDialog.show({\n                controller:  ['$scope', '$mdDialog', 'currentDate', '$mdMedia', '$timeout', DatePickerCtrl],\n                controllerAs: 'datepicker',\n                clickOutsideToClose: true,\n                template: '<md-dialog aria-label=\"\" class=\"mdp-datepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\n                            '<md-dialog-content layout=\"row\" layout-wrap>' +\n                                '<div layout=\"column\" layout-align=\"start center\">' +\n                                    '<md-toolbar layout-align=\"start start\" flex class=\"mdp-datepicker-date-wrapper md-hue-1 md-primary\" layout=\"column\">' +\n                                        '<span class=\"mdp-datepicker-year\" ng-click=\"datepicker.showYear()\" ng-class=\"{ \\'active\\': datepicker.selectingYear }\">{{ datepicker.currentMoment.format(\\'YYYY\\') }}</span>' +\n                                        '<span class=\"mdp-datepicker-date\" ng-click=\"datepicker.showCalendar()\" ng-class=\"{ \\'active\\': !datepicker.selectingYear }\">{{ datepicker.currentMoment.format(\"ddd, MMM DD\") }}</span> ' +\n                                    '</md-toolbar>' + \n                                '</div>' +  \n                                '<div>' + \n                                    '<div class=\"mdp-datepicker-select-year mdp-animation-zoom\" layout=\"column\" ng-if=\"datepicker.selectingYear\">' +\n                                        '<md-virtual-repeat-container md-auto-shrink md-top-index=\"datepicker.yearTopIndex\">' +\n                                            '<div flex md-virtual-repeat=\"item in datepicker.yearItems\" md-on-demand class=\"repeated-year\">' +\n                                                '<span class=\"md-button\" ng-click=\"datepicker.selectYear(item)\" md-ink-ripple ng-class=\"{ \\'md-primary current\\': item == year }\">{{ item }}</span>' +\n                                            '</div>' +\n                                        '</md-virtual-repeat-container>' +\n                                    '</div>' +\n                                    '<mdp-calendar ng-if=\"!datepicker.selectingYear\" class=\"mdp-animation-zoom\" date=\"datepicker.currentMoment\"></mdp-calendar>' +\n                                    '<md-dialog-actions layout=\"row\">' +\n                                    \t'<md-button ng-class=\"{\\'md-icon-button\\': $mdMedia(\\'xs\\')}\" ng-click=\"datepicker.today()\" aria-label=\"' + LABEL_TODAY + '\">' + LABEL_TODAY + '</md-button>' +\n                                    \t'<span flex></span>' +\n                                        '<md-button ng-click=\"datepicker.cancel()\" aria-label=\"' + LABEL_CANCEL + '\">' + LABEL_CANCEL + '</md-button>' +\n                                        '<md-button ng-click=\"datepicker.confirm()\" class=\"md-primary\" aria-label=\"' + LABEL_OK + '\">' + LABEL_OK + '</md-button>' +\n                                    '</md-dialog-actions>' +\n                                '</div>' +\n                            '</md-dialog-content>' +\n                        '</md-dialog>',\n                targetEvent: targetEvent,\n                locals: {\n                    currentDate: currentDate\n                }\n            });\n        };\n    \n        return datePicker;\n    }];\n});\n\nfunction CalendarCtrl($scope) {\n    this.weekDays = moment.weekdaysMin();\n    \n    this.getDaysInMonth = function() {\n        var days = $scope.date.daysInMonth(),\n        \tfirstDay = moment($scope.date).date(1).day();\n\n        var arr = [];\n        for(var i = 1; i <= (firstDay + days); i++)\n            arr.push(i > firstDay ? (i - firstDay) : false);\n\n        return arr;\n    };\n    \n    this.selectDate = function(dom) {\n    \t$scope.date.date(dom);\n    };\n\n    this.nextMonth = function() {\n    \t$scope.date.add(1, 'months');\n    };\n\n    this.prevMonth = function() {\n    \t$scope.date.subtract(1, 'months');\n    };\n}\n\nmodule.directive(\"mdpCalendar\", [\"$animate\", function($animate) {\n    return {\n        restrict: 'E',\n        scope: {\n            \"date\": \"=\"\n        },\n        template: '<div class=\"mdp-calendar\">' +\n                    '<div layout=\"row\" layout-align=\"space-between center\">' +\n                        '<md-button aria-label=\"previous month\" class=\"md-icon-button\" ng-click=\"calendar.prevMonth()\"><md-icon md-font-set=\"material-icons\"> chevron_left </md-icon></md-button>' +\n                        '<div class=\"mdp-calendar-monthyear\" ng-show=\"!calendar.animating\">{{ date.format(\"MMMM YYYY\") }}</div>' +\n                        '<md-button aria-label=\"next month\" class=\"md-icon-button\" ng-click=\"calendar.nextMonth()\"><md-icon md-font-set=\"material-icons\"> chevron_right </md-icon></md-button>' +\n                    '</div>' +\n                    '<div layout=\"row\" layout-align=\"space-around center\" class=\"mdp-calendar-week-days\" ng-show=\"!calendar.animating\">' +\n                        '<div layout layout-align=\"center center\" ng-repeat=\"d in calendar.weekDays track by $index\">{{ d }}</div>' +\n                    '</div>' +\n                    '<div layout=\"row\" layout-align=\"space-around center\" layout-wrap class=\"mdp-calendar-days\" ng-class=\"{ \\'mdp-animate-next\\': calendar.animating }\" ng-show=\"!calendar.animating\" md-swipe-left=\"calendar.nextMonth()\" md-swipe-right=\"calendar.prevMonth()\">' +\n                        '<div layout layout-align=\"center center\" ng-repeat-start=\"n in calendar.getDaysInMonth() track by $index\" ng-class=\"{ \\'mdp-day-placeholder\\': n === false }\">' +\n//                            '<md-button class=\"md-icon-button md-raised\" aria-label=\"Select day\" ng-if=\"n !== false\" ng-class=\"{\\'md-accent\\': date.date() == n}\" ng-click=\"calendar.selectDate(n)\">{{ n }}</md-button>' +\n                        \t'<md-button class=\"md-icon-button md-raised\" aria-label=\"Select day\" ng-class=\"{\\'md-accent\\': date.date() == n}\" ng-disabled=\"n === false\" ng-click=\"calendar.selectDate(n)\"><span ng-if=\"n !== false\">{{ n }}</span></md-button>' +\n                        '</div>' +\n                        '<span flex ng-if=\"$last\"></span>' + \n                        '<div flex=\"100\" ng-if=\"($index + 1) % 7 == 0\" ng-repeat-end></div>' +\n                    '</div>' +\n                '</div>',\n        controller: [\"$scope\", CalendarCtrl],\n        controllerAs: \"calendar\",\n        link: function(scope, element, attrs, ctrl) {\n            var animElements = [\n                element[0].querySelector(\".mdp-calendar-week-days\"),\n                element[0].querySelector('.mdp-calendar-days'),\n                element[0].querySelector('.mdp-calendar-monthyear')\n            ];\n            animElements = animElements.map(function(a) {\n               return angular.element(a); \n            });\n                \n            scope.$watch(function() { return  scope.date.format(\"YYYYMM\") }, function(newValue, oldValue) {\n                var direction = null;\n                \n                if(newValue > oldValue)\n                    direction = \"mdp-animate-next\";\n                else if(newValue < oldValue)\n                    direction = \"mdp-animate-prev\";\n                \n                if(direction) {\n                    for(var i in animElements) {\n                        animElements[i].addClass(direction);\n                        $animate.removeClass(animElements[i], direction);\n                    }\n                }\n            });\n        }\n    }\n}]);\n\nmodule.directive(\"mdpDatePicker\", [\"$mdpDatePicker\", \"$timeout\", function($mdpDatePicker, $timeout) {\n    return  {\n        restrict: 'A',\n        require: '?ngModel',\n        link: function(scope, element, attrs, ngModel) {\n            if ('undefined' !== typeof attrs.type && 'date' === attrs.type && ngModel) {\n                angular.element(element).on(\"click\", function(ev) {\n                  \t\tev.preventDefault();\n                      $mdpDatePicker(ev, ngModel.$modelValue).then(function(selectedDate) {\n                          $timeout(function() { \n                            \tngModel.$setViewValue(moment(selectedDate).format(\"YYYY-MM-DD\")); \n                            \tngModel.$render(); \n                          });\n                      });\n                });\n            }\n        }\n    };\n}]);\n})();"],"sourceRoot":"/source/"}