{"version":3,"sources":["mdPickers.min.js"],"names":["DatePickerCtrl","$scope","$mdDialog","currentDate","$mdMedia","$timeout","self","this","currentMoment","moment","selectingYear","yearItems","currentIndex_","PAGE_SIZE","START","getItemAtIndex","index","getLength","Math","floor","year","selectYear","animate","showYear","yearTopIndex","showCalendar","today","cancel","confirm","hide","toDate","animating","angular","noop","then","CalendarCtrl","weekDays","weekdaysMin","getDaysInMonth","days","date","daysInMonth","firstDay","day","viewDays","ceil","arr","i","push","selectDate","dom","nextMonth","add","prevMonth","subtract","TimePickerCtrl","VIEW_HOURS","VIEW_MINUTES","currentView","clockHours","parseInt","format","clockMinutes","minutes","$watch","newValue","oldValue","isDefined","hour","setAM","setPM","now","ClockCtrl","TYPE_HOURS","TYPE_MINUTES","STEP_DEG","steps","selected","CLOCK_TYPES","hours","range","getPointerStyle","divider","type","degrees","round","-webkit-transform","-ms-transform","transform","setTimeByDeg","deg","setTime","time","init","module","provider","LABEL_OK","LABEL_CANCEL","LABEL_TODAY","setOKButtonLabel","label","setCancelButtonLabel","$get","datePicker","targetEvent","isDate","Date","show","controller","controllerAs","clickOutsideToClose","template","locals","directive","$animate","restrict","scope","link","element","attrs","ctrl","animElements","querySelector","map","a","direction","addClass","removeClass","$mdpDatePicker","require","ngModel","on","ev","preventDefault","$modelValue","selectedDate","$setViewValue","$render","replace","container","onEvent","event","target","x","offsetWidth","offsetX","y","offsetY","offsetHeight","atan2","PI","off","$on","LABEL_NOW","timePicker"],"mappings":"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","file":"mdPickers.min.js","sourcesContent":["(function() {\n\"use strict\";\nvar module = angular.module(\"mdPickers\", [\n\t\"ngMaterial\",\n\t\"ngAnimate\",\n\t\"ngAria\"\n]); \n/* global = */\n\nfunction DatePickerCtrl($scope, $mdDialog, currentDate, $mdMedia, $timeout) {\n    var self = this;\n\n    this.currentDate = currentDate;\n    this.currentMoment = moment(self.currentDate);\n    this.selectingYear = false;\n\n    $scope.$mdMedia = $mdMedia;\n    this.yearItems = {\n        currentIndex_: 0,\n        PAGE_SIZE: 5,\n        START: 1900,\n        getItemAtIndex: function(index) {\n            if(this.currentIndex_ < index)\n                this.currentIndex_ = index;\n            return this.START + index;\n        },\n        getLength: function() {\n            return this.currentIndex_ + Math.floor(this.PAGE_SIZE / 2);\n        }\n    }\n    \n    $scope.year = this.currentMoment.year();\n\n\tthis.selectYear = function(year) {\n        self.currentMoment.year(year);\n        $scope.year = year;\n        self.selectingYear = false;\n        self.animate();\n    };\n    \n    this.showYear = function() { \n        self.yearTopIndex = (self.currentMoment.year() - self.yearItems.START) + Math.floor(self.yearItems.PAGE_SIZE / 2);\n        self.yearItems.currentIndex_ = (self.currentMoment.year() - self.yearItems.START) + 1;\n        self.selectingYear = true;\n    };\n    \n    this.showCalendar = function() {\n        self.selectingYear = false;\n    };\n    \n    this.today = function() {\n    \tself.currentMoment = moment();\n    \tthis.selectYear(self.currentMoment.year());\n    };\n\n    this.cancel = function() {\n        $mdDialog.cancel();\n    };\n\n    this.confirm = function() {\n        $mdDialog.hide(this.currentMoment.toDate());\n    };\n    \n    this.animate = function() {\n        self.animating = true;\n        $timeout(angular.noop).then(function() {\n            self.animating = false;\n        })  \n    };\n}\n\nmodule.provider(\"$mdpDatePicker\", function() {\n    var LABEL_OK = \"OK\",\n        LABEL_CANCEL = \"Cancel\",\n        LABEL_TODAY = \"Today\"; \n        \n    this.setOKButtonLabel = function(label) {\n        LABEL_OK = label;\n    };\n    \n    this.setCancelButtonLabel = function(label) {\n        LABEL_CANCEL = label;\n    };\n    \n    this.$get = [\"$mdDialog\", function($mdDialog) {\n        var datePicker = function(targetEvent, currentDate) {\n            if(!angular.isDate(currentDate)) currentDate = Date.now();\n    \n            return $mdDialog.show({\n                controller:  ['$scope', '$mdDialog', 'currentDate', '$mdMedia', '$timeout', DatePickerCtrl],\n                controllerAs: 'datepicker',\n                clickOutsideToClose: true,\n                template: '<md-dialog aria-label=\"\" class=\"mdp-datepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\n                            '<md-dialog-content layout=\"row\" layout-wrap>' +\n                                '<div layout=\"column\" layout-align=\"start center\">' +\n                                    '<md-toolbar layout-align=\"start start\" flex class=\"mdp-datepicker-date-wrapper md-hue-1 md-primary\" layout=\"column\">' +\n                                        '<span class=\"mdp-datepicker-year\" ng-click=\"datepicker.showYear()\" ng-class=\"{ \\'active\\': datepicker.selectingYear }\">{{ datepicker.currentMoment.format(\\'YYYY\\') }}</span>' +\n                                        '<span class=\"mdp-datepicker-date\" ng-click=\"datepicker.showCalendar()\" ng-class=\"{ \\'active\\': !datepicker.selectingYear }\">{{ datepicker.currentMoment.format(\"ddd, MMM DD\") }}</span> ' +\n                                    '</md-toolbar>' + \n                                '</div>' +  \n                                '<div>' + \n                                    '<div class=\"mdp-datepicker-select-year mdp-animation-zoom\" layout=\"column\" ng-if=\"datepicker.selectingYear\">' +\n                                        '<md-virtual-repeat-container md-auto-shrink md-top-index=\"datepicker.yearTopIndex\">' +\n                                            '<div flex md-virtual-repeat=\"item in datepicker.yearItems\" md-on-demand class=\"repeated-year\">' +\n                                                '<span class=\"md-button\" ng-click=\"datepicker.selectYear(item)\" md-ink-ripple ng-class=\"{ \\'md-primary current\\': item == year }\">{{ item }}</span>' +\n                                            '</div>' +\n                                        '</md-virtual-repeat-container>' +\n                                    '</div>' +\n                                    '<mdp-calendar ng-if=\"!datepicker.selectingYear\" class=\"mdp-animation-zoom\" date=\"datepicker.currentMoment\"></mdp-calendar>' +\n                                    '<md-dialog-actions layout=\"row\">' +\n                                    \t'<md-button ng-click=\"datepicker.today()\" aria-label=\"' + LABEL_TODAY + '\">' + LABEL_TODAY + '</md-button>' +\n                                    \t'<span flex></span>' +\n                                        '<md-button ng-click=\"datepicker.cancel()\" aria-label=\"' + LABEL_CANCEL + '\">' + LABEL_CANCEL + '</md-button>' +\n                                        '<md-button ng-click=\"datepicker.confirm()\" class=\"md-primary\" aria-label=\"' + LABEL_OK + '\">' + LABEL_OK + '</md-button>' +\n                                    '</md-dialog-actions>' +\n                                '</div>' +\n                            '</md-dialog-content>' +\n                        '</md-dialog>',\n                targetEvent: targetEvent,\n                locals: {\n                    currentDate: currentDate\n                }\n            });\n        };\n    \n        return datePicker;\n    }];\n});\n\nfunction CalendarCtrl($scope) {\n    this.weekDays = moment.weekdaysMin();\n    \n    this.getDaysInMonth = function() {\n        var days = $scope.date.daysInMonth(),\n        \tfirstDay = moment($scope.date).date(1).day();\n        \n        var viewDays = Math.ceil((days + firstDay) / 7) * 7;\n\n        var arr = [];\n        for(var i = 1; i <= viewDays; i++) {\n        \tarr.push(i > firstDay && i <= days + firstDay ? (i - firstDay) : false);\n        }\n        \n        return arr;\n    };\n   \n    this.selectDate = function(dom) {\n    \t$scope.date.date(dom);\n    };\n\n    this.nextMonth = function() {\n    \t$scope.date.add(1, 'months');\n    };\n\n    this.prevMonth = function() {\n    \t$scope.date.subtract(1, 'months');\n    };\n}\n\nmodule.directive(\"mdpCalendar\", [\"$animate\", function($animate) {\n    return {\n        restrict: 'E',\n        scope: {\n            \"date\": \"=\"\n        },\n        template: '<div class=\"mdp-calendar\">' +\n                    '<div layout=\"row\" layout-align=\"space-between center\">' +\n                        '<md-button aria-label=\"previous month\" class=\"md-icon-button\" ng-click=\"calendar.prevMonth()\"><md-icon md-font-set=\"material-icons\"> chevron_left </md-icon></md-button>' +\n                        '<div class=\"mdp-calendar-monthyear\" ng-show=\"!calendar.animating\">{{ date.format(\"MMMM YYYY\") }}</div>' +\n                        '<md-button aria-label=\"next month\" class=\"md-icon-button\" ng-click=\"calendar.nextMonth()\"><md-icon md-font-set=\"material-icons\"> chevron_right </md-icon></md-button>' +\n                    '</div>' +\n                    '<div layout=\"row\" layout-align=\"space-around center\" class=\"mdp-calendar-week-days\" ng-show=\"!calendar.animating\">' +\n                        '<div layout layout-align=\"center center\" ng-repeat=\"d in calendar.weekDays track by $index\">{{ d }}</div>' +\n                    '</div>' +\n                    '<div layout=\"row\" layout-align=\"space-around center\" layout-wrap class=\"mdp-calendar-days\" ng-class=\"{ \\'mdp-animate-next\\': calendar.animating }\" ng-show=\"!calendar.animating\" md-swipe-left=\"calendar.nextMonth()\" md-swipe-right=\"calendar.prevMonth()\">' +\n                        '<div layout layout-align=\"center center\" ng-repeat-start=\"n in calendar.getDaysInMonth() track by $index\" ng-class=\"{ \\'mdp-day-placeholder\\': n === false }\">' +\n                            '<md-button class=\"md-icon-button md-raised\" aria-label=\"Select day\" ng-if=\"n !== false\" ng-class=\"{\\'md-accent\\': date.date() == n}\" ng-click=\"calendar.selectDate(n)\">{{ n }}</md-button>' +\n                        '</div>' +\n                        '<div flex=\"100\" ng-if=\"($index + 1) % 7 == 0\" ng-repeat-end></div>' +\n                    '</div>' +\n                '</div>',\n        controller: [\"$scope\", CalendarCtrl],\n        controllerAs: \"calendar\",\n        link: function(scope, element, attrs, ctrl) {\n            var animElements = [\n                element[0].querySelector(\".mdp-calendar-week-days\"),\n                element[0].querySelector('.mdp-calendar-days'),\n                element[0].querySelector('.mdp-calendar-monthyear')\n            ];\n            animElements = animElements.map(function(a) {\n               return angular.element(a); \n            });\n                \n            scope.$watch(function() { return  scope.date.format(\"YYYYMM\") }, function(newValue, oldValue) {\n                var direction = null;\n                \n                if(newValue > oldValue)\n                    direction = \"mdp-animate-next\";\n                else if(newValue < oldValue)\n                    direction = \"mdp-animate-prev\";\n                \n                if(direction) {\n                    for(var i in animElements) {\n                        animElements[i].addClass(direction);\n                        $animate.removeClass(animElements[i], direction);\n                    }\n                }\n            });\n        }\n    }\n}]);\n\nmodule.directive(\"mdpDatePicker\", [\"$mdpDatePicker\", \"$timeout\", function($mdpDatePicker, $timeout) {\n    return  {\n        restrict: 'A',\n        require: '?ngModel',\n        link: function(scope, element, attrs, ngModel) {\n            if ('undefined' !== typeof attrs.type && 'date' === attrs.type && ngModel) {\n                angular.element(element).on(\"click\", function(ev) {\n                  \t\tev.preventDefault();\n                      $mdpDatePicker(ev, ngModel.$modelValue).then(function(selectedDate) {\n                          $timeout(function() { \n                            \tngModel.$setViewValue(moment(selectedDate).format(\"YYYY-MM-DD\")); \n                            \tngModel.$render(); \n                          });\n                      });\n                });\n            }\n        }\n    };\n}]);\nfunction TimePickerCtrl($scope, $mdDialog, currentDate, $mdMedia) {\n\tvar self = this;\n    this.VIEW_HOURS = 1;\n    this.VIEW_MINUTES = 2;\n    this.currentDate = currentDate;\n    this.currentView = this.VIEW_HOURS;\n    this.currentMoment = moment(self.currentDate);\n    \n    this.clockHours = parseInt(this.currentMoment.format(\"h\"));\n    this.clockMinutes = parseInt(this.currentMoment.minutes());\n\t\n    $scope.$watch(function() { return self.clockHours }, function(newValue, oldValue) {\n        if(angular.isDefined(oldValue)) {\n            if(self.currentMoment.format(\"A\") == \"AM\")\n                self.currentMoment.hour(self.clockHours);\n            else\n                self.currentMoment.hour(self.clockHours < 12 ? self.clockHours + 12 : self.clockHours);\n        }\n    });\n    \n     $scope.$watch(function() { return self.clockMinutes }, function(newValue, oldValue) {\n        if(angular.isDefined(oldValue)) {\n            self.currentMoment.minutes(newValue < 60 ? newValue : 0);\n        }\n    });\n    \n\t$scope.$mdMedia = $mdMedia;\n    \n\tthis.setAM = function() {\n        if(self.currentMoment.format(\"A\") == \"PM\")\n            self.currentMoment.hour(self.currentMoment.hour() - 12);\n\t};\n    \n    this.setPM = function() {\n        if(self.currentMoment.format(\"A\") == \"AM\")\n            self.currentMoment.hour(self.currentMoment.hour() + 12);\n\t};\n\t\n\tthis.now = function() {\n\t\tself.currentMoment = moment();\n\t};\n    \n    this.cancel = function() {\n        $mdDialog.cancel();\n    };\n\n    this.confirm = function() {\n        $mdDialog.hide(this.currentMoment.toDate());\n    };\n}\n\nfunction ClockCtrl($scope) {\n    var TYPE_HOURS = \"hours\";\n    var TYPE_MINUTES = \"minutes\";\n    \n    this.STEP_DEG = 360 / 12;\n    var self = this;\n    this.steps = [];\n    this.selected = 0;\n    \n    this.CLOCK_TYPES = {\n        \"hours\": {\n            range: 12,\n        },\n        \"minutes\": {\n            range: 60,\n        }\n    }\n    \n    this.getPointerStyle = function() {\n        var divider = 1;\n        switch(self.type) {\n            case TYPE_HOURS:\n                divider = 12;\n                break;\n            case TYPE_MINUTES:\n                divider = 60;\n                break;\n        }  \n        var degrees = Math.round(self.selected * (360 / divider)) - 180;\n        return { \n            \"-webkit-transform\": \"rotate(\" + degrees + \"deg)\",\n            \"-ms-transform\": \"rotate(\" + degrees + \"deg)\",\n            \"transform\": \"rotate(\" + degrees + \"deg)\"\n        }\n    };\n    \n    this.setTimeByDeg = function(deg) {\n        deg = deg >= 360 ? 0 : deg;\n        var divider = 0;\n        switch(self.type) {\n            case TYPE_HOURS:\n                divider = 12;\n                break;\n            case TYPE_MINUTES:\n                divider = 60;\n                break;\n        }  \n        \n        self.setTime(\n            Math.round(divider / 360 * deg)\n        );\n    };\n    \n    this.setTime = function(time, type) {\n        this.selected = time;\n        if (!type) {\n        \ttype = self.type;\n        }\n        \n        switch(type) {\n        case TYPE_HOURS:\n        \t$scope.date.hours(time);\n            break;\n        case TYPE_MINUTES:\n        \t$scope.date.minutes(time);\n            break;\n        }\n    };\n    \n    this.init = function(type) {\n        self.type = type;\n        switch(type) {\n            case TYPE_HOURS:\n                for(var i = 1; i <= 12; i++)\n                    self.steps.push(i);\n                self.selected = $scope.date.hours() || 0;\n                    \n                break;\n            case TYPE_MINUTES:\n                for(var i = 5; i <= 55; i+=5)\n                    self.steps.push(i);\n                self.steps.push(0);\n                self.selected = $scope.date.minutes() || 0;\n                \n                break;\n        }\n    };\n    \n    $scope.$watch('date', function(newValue, oldValue) {\n    \tself.setTime(newValue.hours(), TYPE_HOURS);\n    \tself.setTime(newValue.minutes(), TYPE_MINUTES);\n    });\n}\n\nmodule.directive(\"mdpClock\", [\"$animate\", \"$timeout\", function($animate, $timeout) {\n    return {\n        restrict: 'E',\n        scope: {\n            'type': '@?',\n            'date' : '='\n        },\n        replace: true,\n        template: '<div class=\"mdp-clock\">' +\n                        '<div class=\"mdp-clock-container\">' +\n                            '<md-toolbar class=\"mdp-clock-center md-primary\"></md-toolbar>' +\n                            '<md-toolbar ng-style=\"clock.getPointerStyle()\" class=\"mdp-pointer md-primary\">' +\n                                '<span class=\"mdp-clock-selected md-button md-raised md-primary\"></span>' +\n                            '</md-toolbar>' +\n                            '<md-button ng-class=\"{ \\'md-primary\\': clock.selected == step }\" class=\"md-icon-button md-raised mdp-clock-deg{{ ::(clock.STEP_DEG * ($index + 1)) }}\" ng-repeat=\"step in clock.steps\" ng-click=\"clock.setTime(step)\">{{ step }}</md-button>' +\n                        '</div>' +\n                    '</div>',\n        controller: [\"$scope\", ClockCtrl],\n        controllerAs: \"clock\",\n        link: function(scope, element, attrs, ctrl) {\n                \n            var container = angular.element(element[0].querySelector(\".mdp-clock-container\")),\n                pointer = angular.element(element[0].querySelector(\".mdp-pointer\"));\n            \n            scope.type = scope.type || \"hours\";\n            $timeout(function() {\n            \tctrl.init(scope.type);\n            });\n            \n            var onEvent = function(event) {\n                if(event.target != container[0]) return;\n                var x = ((event.target.offsetWidth / 2) - event.offsetX),\n                    y = (event.offsetY - (event.target.offsetHeight / 2));\n\n                var deg = Math.round((Math.atan2(x, y) * (180 / Math.PI)));\n                $timeout(function() {\n                    ctrl.setTimeByDeg(deg + 180);\n                });\n            }; \n            \n            container.on(\"mousedown\", function() {\n               container.on(\"mousemove\", onEvent);\n            });\n            \n            container.on(\"mouseup mouseout\", function() {\n               container.off(\"mousemove\", onEvent);\n            });\n            \n            container.on(\"click\", onEvent);\n            scope.$on(\"$destroy\", function() {\n                container.off(\"click\", onEvent);\n                container.off(\"mousemove\", onEvent); \n            });\n        }\n    }\n}]);\n\nmodule.provider(\"$mdpTimePicker\", function() {\n    var LABEL_OK = \"OK\",\n        LABEL_CANCEL = \"Cancel\",\n        LABEL_NOW = \"Now\"; \n        \n    this.setOKButtonLabel = function(label) {\n        LABEL_OK = label;\n    };\n    \n    this.setCancelButtonLabel = function(label) {\n        LABEL_CANCEL = label;\n    };\n    \n    this.$get = [\"$mdDialog\", function($mdDialog) {\n        var timePicker = function(targetEvent, currentDate) {\n            if(!angular.isDate(currentDate)) currentDate = Date.now();\n    \n            return $mdDialog.show({\n                controller:  ['$scope', '$mdDialog', 'currentDate', '$mdMedia', TimePickerCtrl],\n                controllerAs: 'timepicker',\n                clickOutsideToClose: true,\n                template: '<md-dialog aria-label=\"\" class=\"mdp-timepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\n                            '<md-dialog-content layout-gt-xs=\"row\" layout-wrap>' +\n                                '<md-toolbar layout-gt-xs=\"column\" layout-xs=\"row\" layout-align=\"center center\" flex class=\"mdp-timepicker-time md-hue-1 md-primary\">' +\n                                    '<div class=\"mdp-timepicker-selected-time\">' +\n                                        '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_HOURS }\" ng-click=\"timepicker.currentView = timepicker.VIEW_HOURS\">{{ timepicker.currentMoment.format(\"h\") }}</span>:' + \n                                        '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_MINUTES }\" ng-click=\"timepicker.currentView = timepicker.VIEW_MINUTES\">{{ timepicker.currentMoment.format(\"mm\") }}</span>' +\n                                    '</div>' +\n                                    '<div layout=\"column\" class=\"mdp-timepicker-selected-ampm\">' + \n                                        '<span ng-click=\"timepicker.setAM()\" ng-class=\"{ \\'active\\': timepicker.currentMoment.format(\\'A\\') == \\'AM\\' }\">AM</span>' +\n                                        '<span ng-click=\"timepicker.setPM()\" ng-class=\"{ \\'active\\': timepicker.currentMoment.format(\\'A\\') == \\'PM\\' }\">PM</span>' +\n                                    '</div>' + \n                                '</md-toolbar>' +\n                                '<div>' +\n                                    '<div class=\"mdp-clock-switch-container\" ng-switch=\"timepicker.currentView\" layout layout-align=\"center center\">' +\n\t                                    '<mdp-clock class=\"mdp-animation-zoom\" date=\"timepicker.currentMoment\" type=\"hours\" ng-switch-when=\"1\"></mdp-clock>' +\n\t                                    '<mdp-clock class=\"mdp-animation-zoom\" date=\"timepicker.currentMoment\" type=\"minutes\" ng-switch-when=\"2\"></mdp-clock>' +\n                                    '</div>' +\n                                    \n                                    '<md-dialog-actions layout=\"row\">' +\n\t                                    '<md-button ng-click=\"timepicker.now()\" aria-label=\"' + LABEL_NOW + '\">' + LABEL_NOW + '</md-button>' +\n\t                                \t'<span flex></span>' +\n                                        '<md-button ng-click=\"timepicker.cancel()\" aria-label=\"' + LABEL_CANCEL + '\">' + LABEL_CANCEL + '</md-button>' +\n                                        '<md-button ng-click=\"timepicker.confirm()\" class=\"md-primary\" aria-label=\"' + LABEL_OK + '\">' + LABEL_OK + '</md-button>' +\n                                    '</md-dialog-actions>' +\n                                '</div>' +\n                            '</md-dialog-content>' +\n                        '</md-dialog>',\n                targetEvent: targetEvent,\n                locals: {\n                    currentDate: currentDate\n                }\n            });\n        };\n    \n        return timePicker;\n    }];\n});\n})();"],"sourceRoot":"/source/"}