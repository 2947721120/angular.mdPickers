{"version":3,"sources":["mdPickers.min.js"],"names":["TimePickerCtrl","$scope","$mdDialog","currentDate","$mdMedia","self","this","VIEW_HOURS","VIEW_MINUTES","currentView","currentMoment","moment","clockHours","parseInt","format","clockMinutes","minutes","$watch","newValue","oldValue","angular","isDefined","hour","setAM","setPM","now","cancel","confirm","hide","toDate","ClockCtrl","TYPE_HOURS","TYPE_MINUTES","STEP_DEG","steps","selected","CLOCK_TYPES","hours","range","getPointerStyle","divider","type","degrees","Math","round","-webkit-transform","-ms-transform","transform","setTimeByDeg","deg","setTime","time","date","init","i","push","DatePickerCtrl","$timeout","minDate","maxDate","minMoment","startOf","maxMoment","selectingYear","isBefore","add","isAfter","startYear","year","yearItems","currentIndex_","PAGE_SIZE","START","getItemAtIndex","index","getLength","floor","selectYear","animate","showYear","yearTopIndex","showCalendar","today","isTodayAvailable","minValid","maxValid","animating","noop","then","CalendarCtrl","weekDays","weekdaysMin","daysInMonth","updateDaysInMonth","days","firstDay","day","viewDays","ceil","arr","n","valid","isValidDay","selectDate","dom","nextMonth","prevMonth","subtract","module","directive","$animate","restrict","scope","replace","template","controller","controllerAs","link","element","attrs","ctrl","container","querySelector","onEvent","event","target","x","offsetWidth","offsetX","y","offsetY","offsetHeight","atan2","PI","on","off","$on","provider","LABEL_OK","LABEL_CANCEL","LABEL_NOW","setOKButtonLabel","label","setCancelButtonLabel","$get","timePicker","targetEvent","isDate","Date","show","clickOutsideToClose","locals","$mdpTimePicker","require","ngModel","ev","preventDefault","$modelValue","selectedDate","$setViewValue","$render","LABEL_TODAY","datePicker","animElements","map","a","direction","addClass","removeClass","$mdpDatePicker","selectedMoment","isValid","$setValidity"],"mappings":"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","file":"mdPickers.min.js","sourcesContent":["(function() {\n\"use strict\";\nvar module = angular.module(\"mdPickers\", [\n\t\"ngMaterial\",\n\t\"ngAnimate\",\n\t\"ngAria\"\n]); \nfunction TimePickerCtrl($scope, $mdDialog, currentDate, $mdMedia) {\n\tvar self = this;\n    this.VIEW_HOURS = 1;\n    this.VIEW_MINUTES = 2;\n    this.currentDate = currentDate;\n    this.currentView = this.VIEW_HOURS;\n    this.currentMoment = moment(self.currentDate);\n    \n    this.clockHours = parseInt(this.currentMoment.format(\"h\"));\n    this.clockMinutes = parseInt(this.currentMoment.minutes());\n\t\n    $scope.$watch(function() { return self.clockHours }, function(newValue, oldValue) {\n        if(angular.isDefined(oldValue)) {\n            if(self.currentMoment.format(\"A\") == \"AM\")\n                self.currentMoment.hour(self.clockHours);\n            else\n                self.currentMoment.hour(self.clockHours < 12 ? self.clockHours + 12 : self.clockHours);\n        }\n    });\n    \n     $scope.$watch(function() { return self.clockMinutes }, function(newValue, oldValue) {\n        if(angular.isDefined(oldValue)) {\n            self.currentMoment.minutes(newValue < 60 ? newValue : 0);\n        }\n    });\n    \n\t$scope.$mdMedia = $mdMedia;\n    \n\tthis.setAM = function() {\n        if(self.currentMoment.format(\"A\") == \"PM\")\n            self.currentMoment.hour(self.currentMoment.hour() - 12);\n\t};\n    \n    this.setPM = function() {\n        if(self.currentMoment.format(\"A\") == \"AM\")\n            self.currentMoment.hour(self.currentMoment.hour() + 12);\n\t};\n\t\n\tthis.now = function() {\n\t\tself.currentMoment = moment();\n\t};\n    \n    this.cancel = function() {\n        $mdDialog.cancel();\n    };\n\n    this.confirm = function() {\n        $mdDialog.hide(this.currentMoment.toDate());\n    };\n}\n\nfunction ClockCtrl($scope) {\n    var TYPE_HOURS = \"hours\";\n    var TYPE_MINUTES = \"minutes\";\n    \n    this.STEP_DEG = 360 / 12;\n    var self = this;\n    this.steps = [];\n    this.selected = 0;\n    \n    this.CLOCK_TYPES = {\n        \"hours\": {\n            range: 12,\n        },\n        \"minutes\": {\n            range: 60,\n        }\n    }\n    \n    this.getPointerStyle = function() {\n        var divider = 1;\n        switch(self.type) {\n            case TYPE_HOURS:\n                divider = 12;\n                break;\n            case TYPE_MINUTES:\n                divider = 60;\n                break;\n        }  \n        var degrees = Math.round(self.selected * (360 / divider)) - 180;\n        return { \n            \"-webkit-transform\": \"rotate(\" + degrees + \"deg)\",\n            \"-ms-transform\": \"rotate(\" + degrees + \"deg)\",\n            \"transform\": \"rotate(\" + degrees + \"deg)\"\n        }\n    };\n    \n    this.setTimeByDeg = function(deg) {\n        deg = deg >= 360 ? 0 : deg;\n        var divider = 0;\n        switch(self.type) {\n            case TYPE_HOURS:\n                divider = 12;\n                break;\n            case TYPE_MINUTES:\n                divider = 60;\n                break;\n        }  \n        \n        self.setTime(\n            Math.round(divider / 360 * deg)\n        );\n    };\n    \n    this.setTime = function(time, type) {\n        this.selected = time;\n        if (!type) {\n        \ttype = self.type;\n        }\n        \n        switch(type) {\n        case TYPE_HOURS:\n        \t$scope.date.hours(time);\n            break;\n        case TYPE_MINUTES:\n        \t$scope.date.minutes(time);\n            break;\n        }\n    };\n    \n    this.init = function(type) {\n        self.type = type;\n        switch(type) {\n            case TYPE_HOURS:\n                for(var i = 1; i <= 12; i++)\n                    self.steps.push(i);\n                self.selected = $scope.date.hours() || 0;\n                    \n                break;\n            case TYPE_MINUTES:\n                for(var i = 5; i <= 55; i+=5)\n                    self.steps.push(i);\n                self.steps.push(0);\n                self.selected = $scope.date.minutes() || 0;\n                \n                break;\n        }\n    };\n    \n    $scope.$watch('date', function(newValue, oldValue) {\n    \tself.setTime(newValue.hours(), TYPE_HOURS);\n    \tself.setTime(newValue.minutes(), TYPE_MINUTES);\n    });\n}\n\nmodule.directive(\"mdpClock\", [\"$animate\", \"$timeout\", function($animate, $timeout) {\n    return {\n        restrict: 'E',\n        scope: {\n            'type': '@?',\n            'date' : '='\n        },\n        replace: true,\n        template: '<div class=\"mdp-clock\">' +\n                        '<div class=\"mdp-clock-container\">' +\n                            '<md-toolbar class=\"mdp-clock-center md-primary\"></md-toolbar>' +\n                            '<md-toolbar ng-style=\"clock.getPointerStyle()\" class=\"mdp-pointer md-primary\">' +\n                                '<span class=\"mdp-clock-selected md-button md-raised md-primary\"></span>' +\n                            '</md-toolbar>' +\n                            '<md-button ng-class=\"{ \\'md-primary\\': clock.selected == step }\" class=\"md-icon-button md-raised mdp-clock-deg{{ ::(clock.STEP_DEG * ($index + 1)) }}\" ng-repeat=\"step in clock.steps\" ng-click=\"clock.setTime(step)\">{{ step }}</md-button>' +\n                        '</div>' +\n                    '</div>',\n        controller: [\"$scope\", ClockCtrl],\n        controllerAs: \"clock\",\n        link: function(scope, element, attrs, ctrl) {\n                \n            var container = angular.element(element[0].querySelector(\".mdp-clock-container\")),\n                pointer = angular.element(element[0].querySelector(\".mdp-pointer\"));\n            \n            scope.type = scope.type || \"hours\";\n            $timeout(function() {\n            \tctrl.init(scope.type);\n            });\n            \n            var onEvent = function(event) {\n                if(event.target != container[0]) return;\n                var x = ((event.target.offsetWidth / 2) - event.offsetX),\n                    y = (event.offsetY - (event.target.offsetHeight / 2));\n\n                var deg = Math.round((Math.atan2(x, y) * (180 / Math.PI)));\n                $timeout(function() {\n                    ctrl.setTimeByDeg(deg + 180);\n                });\n            }; \n            \n            container.on(\"mousedown\", function() {\n               container.on(\"mousemove\", onEvent);\n            });\n            \n            container.on(\"mouseup mouseout\", function() {\n               container.off(\"mousemove\", onEvent);\n            });\n            \n            container.on(\"click\", onEvent);\n            scope.$on(\"$destroy\", function() {\n                container.off(\"click\", onEvent);\n                container.off(\"mousemove\", onEvent); \n            });\n        }\n    }\n}]);\n\nmodule.provider(\"$mdpTimePicker\", function() {\n    var LABEL_OK = \"OK\",\n        LABEL_CANCEL = \"Cancel\",\n        LABEL_NOW = \"Now\"; \n        \n    this.setOKButtonLabel = function(label) {\n        LABEL_OK = label;\n    };\n    \n    this.setCancelButtonLabel = function(label) {\n        LABEL_CANCEL = label;\n    };\n    \n    this.$get = [\"$mdDialog\", function($mdDialog) {\n        var timePicker = function(targetEvent, currentDate) {\n            if(!angular.isDate(currentDate)) currentDate = Date.now();\n    \n            return $mdDialog.show({\n                controller:  ['$scope', '$mdDialog', 'currentDate', '$mdMedia', TimePickerCtrl],\n                controllerAs: 'timepicker',\n                clickOutsideToClose: true,\n                template: '<md-dialog aria-label=\"\" class=\"mdp-timepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\n                            '<md-dialog-content layout-gt-xs=\"row\" layout-wrap>' +\n                                '<md-toolbar layout-gt-xs=\"column\" layout-xs=\"row\" layout-align=\"center center\" flex class=\"mdp-timepicker-time md-hue-1 md-primary\">' +\n                                    '<div class=\"mdp-timepicker-selected-time\">' +\n                                        '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_HOURS }\" ng-click=\"timepicker.currentView = timepicker.VIEW_HOURS\">{{ timepicker.currentMoment.format(\"h\") }}</span>:' + \n                                        '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_MINUTES }\" ng-click=\"timepicker.currentView = timepicker.VIEW_MINUTES\">{{ timepicker.currentMoment.format(\"mm\") }}</span>' +\n                                    '</div>' +\n                                    '<div layout=\"column\" class=\"mdp-timepicker-selected-ampm\">' + \n                                        '<span ng-click=\"timepicker.setAM()\" ng-class=\"{ \\'active\\': timepicker.currentMoment.format(\\'A\\') == \\'AM\\' }\">AM</span>' +\n                                        '<span ng-click=\"timepicker.setPM()\" ng-class=\"{ \\'active\\': timepicker.currentMoment.format(\\'A\\') == \\'PM\\' }\">PM</span>' +\n                                    '</div>' + \n                                '</md-toolbar>' +\n                                '<div>' +\n                                    '<div class=\"mdp-clock-switch-container\" ng-switch=\"timepicker.currentView\" layout layout-align=\"center center\">' +\n\t                                    '<mdp-clock class=\"mdp-animation-zoom\" date=\"timepicker.currentMoment\" type=\"hours\" ng-switch-when=\"1\"></mdp-clock>' +\n\t                                    '<mdp-clock class=\"mdp-animation-zoom\" date=\"timepicker.currentMoment\" type=\"minutes\" ng-switch-when=\"2\"></mdp-clock>' +\n                                    '</div>' +\n                                    \n                                    '<md-dialog-actions layout=\"row\">' +\n\t                                    '<md-button ng-click=\"timepicker.now()\" aria-label=\"' + LABEL_NOW + '\">' + LABEL_NOW + '</md-button>' +\n\t                                \t'<span flex></span>' +\n                                        '<md-button ng-click=\"timepicker.cancel()\" aria-label=\"' + LABEL_CANCEL + '\">' + LABEL_CANCEL + '</md-button>' +\n                                        '<md-button ng-click=\"timepicker.confirm()\" class=\"md-primary\" aria-label=\"' + LABEL_OK + '\">' + LABEL_OK + '</md-button>' +\n                                    '</md-dialog-actions>' +\n                                '</div>' +\n                            '</md-dialog-content>' +\n                        '</md-dialog>',\n                targetEvent: targetEvent,\n                locals: {\n                    currentDate: currentDate\n                }\n            });\n        };\n    \n        return timePicker;\n    }];\n});\n\nmodule.directive(\"mdpTimePicker\", [\"$mdpTimePicker\", \"$timeout\", function($mdpTimePicker, $timeout) {\n    return  {\n        restrict: 'A',\n        require: '?ngModel',\n        scope: {\n        \tformat : \"@mdPattern\"\n        },\n        link: function(scope, element, attrs, ngModel) {\n            if ('undefined' !== typeof attrs.type && 'time' === attrs.type && ngModel) {\n                angular.element(element).on(\"click\", function(ev) {\n                \tev.preventDefault();\n                \t\n                \t$mdpTimePicker(ev, ngModel.$modelValue).then(function(selectedDate) {\n                \t\t$timeout(function() {\n                \t\t\tvar format = \"HH:mm\";\n                    \t    if (scope.format) {\n                    \t    \tformat = scope.format;\n                    \t    }  \n                \t\t\t\n                \t\t\tngModel.$setViewValue(moment(selectedDate).format(format)); \n                \t\t\tngModel.$render(); \n                          });\n                      });\n                });\n            }\n        }\n    };\n}]);\n/* global = */\n\nfunction DatePickerCtrl($scope, $mdDialog, $mdMedia, $timeout, currentDate, minDate, maxDate) {\n    var self = this;\n\n    this.currentDate = currentDate;\n    this.currentMoment = moment(self.currentDate);\n    this.minMoment = minDate ? moment(minDate).startOf(\"day\") : null;\n    this.maxMoment = maxDate ? moment(maxDate).startOf(\"day\") : null;\n    this.selectingYear = false;\n\n    $scope.$mdMedia = $mdMedia;\n    \n    this.init = function() {\n    \t// validate min and max date\n    \tif (this.minMoment && this.maxMoment) {\n    \t\tif (this.maxMoment.isBefore(this.minMoment)) {\n    \t\t\tthis.maxMoment = moment(this.minMoment).add(1, 'days');\n    \t\t}\n    \t}\n    \t\n    \tif (this.currentMoment) {\n    \t\t// check min date\n\t    \tif (this.minMoment && this.currentMoment.isBefore(this.minMoment)) {\n    \t\t\tthis.currentMoment = moment(this.minMoment);\n\t    \t}\n\t    \t\n\t    \t// check max date\n\t    \tif (this.maxMoment && this.currentMoment.isAfter(this.maxMoment)) {\n    \t\t\tthis.currentMoment = moment(this.maxMoment);\n\t    \t}\n    \t}\n    \t\n    \tvar startYear = this.minMoment ? this.minMoment.year() : 1900;\n    \tvar endYear = this.maxMoment ? this.maxMoment.year() : null;\n    \t\n    \tthis.yearItems = {\n\t        currentIndex_: 0,\n\t        PAGE_SIZE: 5,\n\t        START: startYear,\n\t        getItemAtIndex: function(index) {\n\t        \tif(this.currentIndex_ < index)\n\t                this.currentIndex_ = index;\n\t        \t\n\t        \treturn this.START + index;\n\t        },\n\t        getLength: function() {\n\t            return this.currentIndex_ + Math.floor(this.PAGE_SIZE / 2);\n\t        }\n\t    };\n    };\n    \n    self.init();\n    \n    $scope.year = this.currentMoment.year();\n\n\tthis.selectYear = function(year) {\n        self.currentMoment.year(year);\n        $scope.year = year;\n        self.selectingYear = false;\n        self.animate();\n    };\n    \n    this.showYear = function() { \n        self.yearTopIndex = (self.currentMoment.year() - self.yearItems.START) + Math.floor(self.yearItems.PAGE_SIZE / 2);\n        self.yearItems.currentIndex_ = (self.currentMoment.year() - self.yearItems.START) + 1;\n        self.selectingYear = true;\n    };\n    \n    this.showCalendar = function() {\n        self.selectingYear = false;\n    };\n    \n    this.today = function() {\n    \tself.currentMoment = moment();\n    \tthis.selectYear(self.currentMoment.year());\n    };\n    \n    this.isTodayAvailable = function() {\n    \tvar minValid = true, maxValid = true;\n    \tvar date = moment().startOf(\"day\").toDate();\n    \t\n    \tif (this.minMoment) {\n    \t\tminValid = date >= this.minMoment.toDate();\n    \t}\n    \t\n    \tif (this.maxMoment) {\n    \t\tmaxValid = date <= this.maxMoment.toDate();\n    \t}\n    \t\n    \treturn minValid && maxValid;\n    };\n\n    this.cancel = function() {\n        $mdDialog.cancel();\n    };\n\n    this.confirm = function() {\n    \tvar date = this.currentMoment;\n    \t\n    \tif (this.minMoment && this.currentMoment.isBefore(this.minMoment)) {\n    \t\tdate = moment(this.minMoment);\n    \t}\n    \t\n    \tif (this.maxMoment && this.currentMoment.isAfter(this.maxMoment)) {\n    \t\tdate = moment(this.maxMoment);\n    \t}  \t\n    \t\n        $mdDialog.hide(date.toDate());\n    };\n    \n    this.animate = function() {\n        self.animating = true;\n        $timeout(angular.noop).then(function() {\n            self.animating = false;\n        })  \n    };\n}\n\nmodule.provider(\"$mdpDatePicker\", function() {\n    var LABEL_OK = \"OK\",\n        LABEL_CANCEL = \"Cancel\",\n        LABEL_TODAY = \"Today\"; \n        \n    this.setOKButtonLabel = function(label) {\n        LABEL_OK = label;\n    };\n    \n    this.setCancelButtonLabel = function(label) {\n        LABEL_CANCEL = label;\n    };\n    \n    this.$get = [\"$mdDialog\", function($mdDialog) {\n        var datePicker = function(targetEvent, currentDate, minDate, maxDate) {\n            if (!angular.isDate(currentDate)) currentDate = Date.now();\n            if (!angular.isDate(minDate)) minDate = null;\n            if (!angular.isDate(maxDate)) maxDate = null;\n    \n            return $mdDialog.show({\n                controller:  ['$scope', '$mdDialog', '$mdMedia', '$timeout', 'currentDate', 'minDate', 'maxDate', DatePickerCtrl],\n                controllerAs: 'datepicker',\n                clickOutsideToClose: true,\n                template: '<md-dialog aria-label=\"\" class=\"mdp-datepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\n                            '<md-dialog-content layout=\"row\" layout-wrap>' +\n                                '<div layout=\"column\" layout-align=\"start center\">' +\n                                    '<md-toolbar layout-align=\"start start\" flex class=\"mdp-datepicker-date-wrapper md-hue-1 md-primary\" layout=\"column\">' +\n                                        '<span class=\"mdp-datepicker-year\" ng-click=\"datepicker.showYear()\" ng-class=\"{ \\'active\\': datepicker.selectingYear }\">{{ datepicker.currentMoment.format(\\'YYYY\\') }}</span>' +\n                                        '<span class=\"mdp-datepicker-date\" ng-click=\"datepicker.showCalendar()\" ng-class=\"{ \\'active\\': !datepicker.selectingYear }\">{{ datepicker.currentMoment.format(\"ddd, MMM DD\") }}</span> ' +\n                                    '</md-toolbar>' + \n                                '</div>' +  \n                                '<div>' + \n                                    '<div class=\"mdp-datepicker-select-year mdp-animation-zoom\" layout=\"column\" ng-if=\"datepicker.selectingYear\">' +\n                                        '<md-virtual-repeat-container md-auto-shrink md-top-index=\"datepicker.yearTopIndex\">' +\n                                            '<div flex md-virtual-repeat=\"item in datepicker.yearItems\" md-on-demand class=\"repeated-year\">' +\n                                                '<span class=\"md-button\" ng-click=\"datepicker.selectYear(item)\" md-ink-ripple ng-class=\"{ \\'md-primary current\\': item == year }\">{{ item }}</span>' +\n                                            '</div>' +\n                                        '</md-virtual-repeat-container>' +\n                                    '</div>' +\n                                    '<mdp-calendar ng-if=\"!datepicker.selectingYear\" class=\"mdp-animation-zoom\" date=\"datepicker.currentMoment\" min-date=\"datepicker.minMoment\" max-date=\"datepicker.maxMoment\"></mdp-calendar>' +\n                                    '<md-dialog-actions layout=\"row\">' +\n                                    \t'<md-button ng-click=\"datepicker.today()\" ng-if=\"datepicker.isTodayAvailable()\" aria-label=\"' + LABEL_TODAY + '\">' + LABEL_TODAY + '</md-button>' +\n                                    \t'<span flex></span>' +\n                                        '<md-button ng-click=\"datepicker.cancel()\" aria-label=\"' + LABEL_CANCEL + '\">' + LABEL_CANCEL + '</md-button>' +\n                                        '<md-button ng-click=\"datepicker.confirm()\" class=\"md-primary\" aria-label=\"' + LABEL_OK + '\">' + LABEL_OK + '</md-button>' +\n                                    '</md-dialog-actions>' +\n                                '</div>' +\n                            '</md-dialog-content>' +\n                        '</md-dialog>',\n                targetEvent: targetEvent,\n                locals: {\n                    currentDate: currentDate,\n                    minDate: minDate, \n                    maxDate: maxDate\n                }\n            });\n        };\n    \n        return datePicker;\n    }];\n});\n\nfunction CalendarCtrl($scope) {\n\tvar _self = this;\n\t\n    this.weekDays = moment.weekdaysMin();\n    this.daysInMonth = [];\n    \n    this.updateDaysInMonth = function() {\n        var days = $scope.date.daysInMonth(),\n        \tfirstDay = moment($scope.date).date(1).day();\n        \n        var viewDays = Math.ceil((days + firstDay) / 7) * 7;\n\n        var arr = [];\n        for(var i = 1; i <= viewDays; i++) {\n        \tvar n = (i - firstDay);\n        \tarr.push(i > firstDay && i <= days + firstDay ? {n: n, valid: this.isValidDay(n)} : false);\n        }\n        \n        this.daysInMonth = arr;\n    };\n    \n    this.isValidDay = function(day) {\n    \tvar minValid = true, maxValid = true;\n    \tvar date = moment($scope.date).date(day).startOf(\"day\").toDate();\n    \t\n    \tif ($scope.minDate) {\n    \t\tminValid = date >= $scope.minDate.toDate();\n    \t}\n    \t\n    \tif ($scope.maxDate) {\n    \t\tmaxValid = date <= $scope.maxDate.toDate();\n    \t}\n    \t\n    \treturn minValid && maxValid;\n    };\n   \n    this.selectDate = function(dom) {\n    \t$scope.date.date(dom);\n    };\n\n    this.nextMonth = function() {\n    \t$scope.date.add(1, 'months');\n    \tthis.updateDaysInMonth();\n    };\n\n    this.prevMonth = function() {\n    \t$scope.date.subtract(1, 'months');\n    \tthis.updateDaysInMonth();\n    };\n    \n    // init\n    this.updateDaysInMonth();\n}\n\nmodule.directive(\"mdpCalendar\", [\"$animate\", function($animate) {\n    return {\n        restrict: 'E',\n        scope: {\n            \"date\": \"=\",\n            \"minDate\": \"=\",\n            \"maxDate\": \"=\"\n        },\n        template: '<div class=\"mdp-calendar\">' +\n                    '<div layout=\"row\" layout-align=\"space-between center\">' +\n                        '<md-button aria-label=\"previous month\" class=\"md-icon-button\" ng-click=\"calendar.prevMonth()\"><md-icon md-font-set=\"material-icons\"> chevron_left </md-icon></md-button>' +\n                        '<div class=\"mdp-calendar-monthyear\" ng-show=\"!calendar.animating\">{{ date.format(\"MMMM YYYY\") }}</div>' +\n                        '<md-button aria-label=\"next month\" class=\"md-icon-button\" ng-click=\"calendar.nextMonth()\"><md-icon md-font-set=\"material-icons\"> chevron_right </md-icon></md-button>' +\n                    '</div>' +\n                    '<div layout=\"row\" layout-align=\"space-around center\" class=\"mdp-calendar-week-days\" ng-show=\"!calendar.animating\">' +\n                        '<div layout layout-align=\"center center\" ng-repeat=\"d in calendar.weekDays track by $index\">{{ d }}</div>' +\n                    '</div>' +\n                    '<div layout=\"row\" layout-align=\"space-around center\" layout-wrap class=\"mdp-calendar-days\" ng-class=\"{ \\'mdp-animate-next\\': calendar.animating }\" ng-show=\"!calendar.animating\" md-swipe-left=\"calendar.nextMonth()\" md-swipe-right=\"calendar.prevMonth()\">' +\n                        '<div layout layout-align=\"center center\" ng-repeat-start=\"day in calendar.daysInMonth track by $index\" ng-class=\"{ \\'mdp-day-placeholder\\': day === false }\">' +\n                            '<md-button class=\"md-icon-button md-raised\" aria-label=\"Select day\" ng-if=\"day !== false\" ng-class=\"{\\'md-accent\\': date.date() == day.n}\" ng-click=\"calendar.selectDate(day.n)\" ng-disabled=\"!day.valid\">{{ day.n }}</md-button>' +\n                        '</div>' +\n                        '<div flex=\"100\" ng-if=\"($index + 1) % 7 == 0\" ng-repeat-end></div>' +\n                    '</div>' +\n                '</div>',\n        controller: [\"$scope\", CalendarCtrl],\n        controllerAs: \"calendar\",\n        link: function(scope, element, attrs, ctrl) {\n            var animElements = [\n                element[0].querySelector(\".mdp-calendar-week-days\"),\n                element[0].querySelector('.mdp-calendar-days'),\n                element[0].querySelector('.mdp-calendar-monthyear')\n            ];\n            animElements = animElements.map(function(a) {\n               return angular.element(a); \n            });\n                \n            scope.$watch(function() { return  scope.date.format(\"YYYYMM\") }, function(newValue, oldValue) {\n                var direction = null;\n                \n                if(newValue > oldValue)\n                    direction = \"mdp-animate-next\";\n                else if(newValue < oldValue)\n                    direction = \"mdp-animate-prev\";\n                \n                if(direction) {\n                    for(var i in animElements) {\n                        animElements[i].addClass(direction);\n                        $animate.removeClass(animElements[i], direction);\n                    }\n                }\n            });\n        }\n    }\n}]);\n\nmodule.directive(\"mdpDatePicker\", [\"$mdpDatePicker\", \"$timeout\", function($mdpDatePicker, $timeout) {\n    return  {\n        restrict: 'A',\n        require: '?ngModel',\n        scope: {\n            \"minDate\": \"=mdMinDate\",\n            \"maxDate\": \"=mdMaxDate\"\n        },\n        link: function(scope, element, attrs, ngModel) {\n            if ('undefined' !== typeof attrs.type && 'date' === attrs.type && ngModel) {\n                angular.element(element).on(\"click\", function(ev) {\n                \tev.preventDefault();\n                \t\n                \t$mdpDatePicker(ev, ngModel.$modelValue, scope.minDate, scope.maxDate).then(function(selectedDate) {\n                \t\t$timeout(function() {\n                \t\t\tvar selectedMoment = moment(selectedDate).startOf(\"day\");\n                \t\t\tvar minMoment = scope.minDate ? moment(scope.minDate) : null;\n                \t\t\tvar maxMoment = scope.maxDate ? moment(scope.maxDate) : null;\n                \t\t\t\n                \t\t\t// validate min and max date\n                        \tif (minMoment && maxMoment) {\n                        \t\tif (maxMoment.isBefore(minMoment)) {\n                        \t\t\tmaxMoment = moment(minMoment).add(1, 'days');\n                        \t\t}\n                        \t}\n                \t\t\t\n                \t\t\tif (minMoment && minMoment.isValid()) {\n                \t\t\t\tminMoment.startOf(\"day\");\n                \t\t\t\tngModel.$setValidity('mindate', selectedMoment.toDate() >= minMoment.toDate());\n                \t\t\t}\n                \t\t\t\n                \t\t\tif (maxMoment && maxMoment.isValid()) {\n                \t\t\t\tmaxMoment.startOf(\"day\");\n                \t\t\t\tngModel.$setValidity('maxdate', selectedMoment.toDate() <= maxMoment.toDate());\n                \t\t\t}\n                    \t      \n                \t\t\tngModel.$setViewValue(selectedMoment.format(\"YYYY-MM-DD\")); \n                \t\t\tngModel.$render(); \n                          });\n                      });\n                });\n            }\n        }\n    };\n}]);\n})();"],"sourceRoot":"/source/"}