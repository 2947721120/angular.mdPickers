<<<<<<< HEAD
<<<<<<< HEAD
{"version":3,"sources":["mdPickers.min.js"],"names":["DatePickerCtrl","$scope","$mdDialog","$mdMedia","$timeout","currentDate","options","self","this","date","moment","minDate","angular","isDate","maxDate","selectingYear","init","minMoment","maxMoment","isBefore","add","isAfter","year","yearItems","currentIndex_","PAGE_SIZE","START","END","getItemAtIndex","index","getLength","Math","min","floor","abs","selectYear","animate","showYear","yearTopIndex","showCalendar","today","isTodayAvailable","minValid","maxValid","startOf","toDate","cancel","confirm","hide","animating","noop","then","CalendarCtrl","weekDays","weekdaysMin","daysInMonth","getDaysInMonth","days","firstDay","day","arr","i","value","enabled","isDayEnabled","push","selectDate","dom","nextMonth","prevMonth","subtract","updateDaysInMonth","$watch","unix","newValue","oldValue","isValidDay","TimePickerCtrl","VIEW_HOURS","VIEW_MINUTES","currentView","currentMoment","clockHours","parseInt","format","clockMinutes","minutes","isDefined","hour","setAM","setPM","now","ClockCtrl","TYPE_HOURS","TYPE_MINUTES","STEP_DEG","steps","selected","CLOCK_TYPES","hours","range","getPointerStyle","divider","type","degrees","round","-webkit-transform","-ms-transform","transform","setTimeByDeg","deg","setTime","time","module","provider","LABEL_OK","LABEL_CANCEL","LABEL_TODAY","setOKButtonLabel","label","setCancelButtonLabel","$get","datePicker","Date","isObject","show","controller","controllerAs","clickOutsideToClose","template","targetEvent","locals","directive","$animate","restrict","bindToController","link","scope","element","attrs","ctrl","animElements","querySelector","map","a","direction","addClass","removeClass","$mdpDatePicker","require","ngModel","on","ev","preventDefault","$modelValue","selectedDate","selectedMoment","isValid","$setValidity","$setViewValue","$render","replace","container","onEvent","event","target","x","offsetWidth","offsetX","y","offsetY","offsetHeight","atan2","PI","off","$on","LABEL_NOW","timePicker","$mdpTimePicker"],"mappings":"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","file":"mdPickers.min.js","sourcesContent":["(function() {\n\"use strict\";\nvar module = angular.module(\"mdPickers\", [\n\t\"ngMaterial\",\n\t\"ngAnimate\",\n\t\"ngAria\"\n]); \n/* global moment, angular */\n\nfunction DatePickerCtrl($scope, $mdDialog, $mdMedia, $timeout, currentDate, options) {\n    var self = this;\n\n    this.date = moment(self.currentDate);\n    this.minDate = angular.isDate(options.minDate) ? moment(options.minDate) : null;\n    this.maxDate = angular.isDate(options.maxDate) ? moment(options.maxDate) : null;\n    this.selectingYear = false;\n\n    $scope.$mdMedia = $mdMedia;\n    \n    this.init = function() {\n    \t// validate min and max date\n    \tif (this.minMoment && this.maxMoment) {\n    \t\tif (this.maxMoment.isBefore(this.minMoment)) {\n    \t\t\tthis.maxMoment = moment(this.minMoment).add(1, 'days');\n    \t\t}\n    \t}\n    \t\n    \tif (this.date) {\n    \t\t// check min date\n\t    \tif (this.minMoment && this.date.isBefore(this.minMoment)) {\n    \t\t\tthis.date = moment(this.minMoment);\n\t    \t}\n\t    \t\n\t    \t// check max date\n\t    \tif (this.maxMoment && this.date.isAfter(this.maxMoment)) {\n    \t\t\tthis.date = moment(this.maxMoment);\n\t    \t}\n    \t}\n    \t\n    \tvar startYear = this.minMoment ? this.minMoment.year() : 1900;\n    \tvar endYear = this.maxMoment ? this.maxMoment.year() : null;\n    \t\n    \tthis.yearItems = {\n\t        currentIndex_: 0,\n\t        PAGE_SIZE: 5,\n\t        START: (self.minDate ? self.minDate.year() : 1900),\n\t        END: (self.maxDate ? self.maxDate.year() : 0),\n\t        getItemAtIndex: function(index) {\n\t        \tif(this.currentIndex_ < index)\n\t                this.currentIndex_ = index;\n\t        \t\n\t        \treturn this.START + index;\n\t        },\n\t        getLength: function() {\n\t            return Math.min(\n\t                this.currentIndex_ + Math.floor(this.PAGE_SIZE / 2),\n\t                Math.abs(this.START - this.END) + 1\n                );\n\t        }\n\t    };\n    };\n    \n    self.init();\n    \n    $scope.year = this.date.year();\n\n\tthis.selectYear = function(year) {\n        self.date.year(year);\n        $scope.year = year;\n        self.selectingYear = false;\n        self.animate();\n    };\n    \n    this.showYear = function() { \n        self.yearTopIndex = (self.date.year() - self.yearItems.START) + Math.floor(self.yearItems.PAGE_SIZE / 2);\n        self.yearItems.currentIndex_ = (self.date.year() - self.yearItems.START) + 1;\n        self.selectingYear = true;\n    };\n    \n    this.showCalendar = function() {\n        self.selectingYear = false;\n    };\n    \n    this.today = function() {\n    \tself.date = moment();\n    \tthis.selectYear(self.date.year());\n    };\n    \n    this.isTodayAvailable = function() {\n    \tvar minValid = true, maxValid = true;\n    \tvar date = moment().startOf(\"day\").toDate();\n    \t\n    \tif (this.minMoment) {\n    \t\tminValid = date >= this.minMoment.toDate();\n    \t}\n    \t\n    \tif (this.maxMoment) {\n    \t\tmaxValid = date <= this.maxMoment.toDate();\n    \t}\n    \t\n    \treturn minValid && maxValid;\n    };\n\n    this.cancel = function() {\n        $mdDialog.cancel();\n    };\n\n    this.confirm = function() {\n    \tvar date = this.date;\n    \t\n    \tif (this.minMoment && this.date.isBefore(this.minMoment)) {\n    \t\tdate = moment(this.minMoment);\n    \t}\n    \t\n    \tif (this.maxMoment && this.date.isAfter(this.maxMoment)) {\n    \t\tdate = moment(this.maxMoment);\n    \t}  \t\n    \t\n        $mdDialog.hide(date.toDate());\n    };\n    \n    this.animate = function() {\n        self.animating = true;\n        $timeout(angular.noop).then(function() {\n            self.animating = false;\n        })  \n    };\n}\n\nmodule.provider(\"$mdpDatePicker\", function() {\n    var LABEL_OK = \"OK\",\n        LABEL_CANCEL = \"Cancel\",\n        LABEL_TODAY = \"Today\"; \n        \n    this.setOKButtonLabel = function(label) {\n        LABEL_OK = label;\n    };\n    \n    this.setCancelButtonLabel = function(label) {\n        LABEL_CANCEL = label;\n    };\n    \n    this.$get = [\"$mdDialog\", function($mdDialog) {\n        var datePicker = function(currentDate, options) {\n            if (!angular.isDate(currentDate)) currentDate = Date.now();\n            if (!angular.isObject(options)) options = {};\n    \n            return $mdDialog.show({\n                controller:  ['$scope', '$mdDialog', '$mdMedia', '$timeout', 'currentDate', 'options', DatePickerCtrl],\n                controllerAs: 'datepicker',\n                clickOutsideToClose: true,\n                template: '<md-dialog aria-label=\"\" class=\"mdp-datepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\n                            '<md-dialog-content layout=\"row\" layout-wrap>' +\n                                '<div layout=\"column\" layout-align=\"start center\">' +\n                                    '<md-toolbar layout-align=\"start start\" flex class=\"mdp-datepicker-date-wrapper md-hue-1 md-primary\" layout=\"column\">' +\n                                        '<span class=\"mdp-datepicker-year\" ng-click=\"datepicker.showYear()\" ng-class=\"{ \\'active\\': datepicker.selectingYear }\">{{ datepicker.date.format(\\'YYYY\\') }}</span>' +\n                                        '<span class=\"mdp-datepicker-date\" ng-click=\"datepicker.showCalendar()\" ng-class=\"{ \\'active\\': !datepicker.selectingYear }\">{{ datepicker.date.format(\"ddd, MMM DD\") }}</span> ' +\n                                    '</md-toolbar>' + \n                                '</div>' +  \n                                '<div>' + \n                                    '<div class=\"mdp-datepicker-select-year mdp-animation-zoom\" layout=\"column\" layout-align=\"center start\" ng-if=\"datepicker.selectingYear\">' +\n                                        '<md-virtual-repeat-container md-auto-shrink md-top-index=\"datepicker.yearTopIndex\">' +\n                                            '<div flex md-virtual-repeat=\"item in datepicker.yearItems\" md-on-demand class=\"repeated-year\">' +\n                                                '<span class=\"md-button\" ng-click=\"datepicker.selectYear(item)\" md-ink-ripple ng-class=\"{ \\'md-primary current\\': item == year }\">{{ item }}</span>' +\n                                            '</div>' +\n                                        '</md-virtual-repeat-container>' +\n                                    '</div>' +\n                                    '<mdp-calendar ng-if=\"!datepicker.selectingYear\" class=\"mdp-animation-zoom\" date=\"datepicker.date\" min-date=\"datepicker.minMoment\" max-date=\"datepicker.maxMoment\"></mdp-calendar>' +\n                                    '<md-dialog-actions layout=\"row\">' +\n                                    \t'<md-button ng-click=\"datepicker.today()\" ng-if=\"datepicker.isTodayAvailable()\" aria-label=\"' + LABEL_TODAY + '\">' + LABEL_TODAY + '</md-button>' +\n                                    \t'<span flex></span>' +\n                                        '<md-button ng-click=\"datepicker.cancel()\" aria-label=\"' + LABEL_CANCEL + '\">' + LABEL_CANCEL + '</md-button>' +\n                                        '<md-button ng-click=\"datepicker.confirm()\" class=\"md-primary\" aria-label=\"' + LABEL_OK + '\">' + LABEL_OK + '</md-button>' +\n                                    '</md-dialog-actions>' +\n                                '</div>' +\n                            '</md-dialog-content>' +\n                        '</md-dialog>',\n                targetEvent: options.targetEvent,\n                locals: {\n                    currentDate: currentDate,\n                    options: options\n                }\n            });\n        };\n    \n        return datePicker;\n    }];\n});\n\nfunction CalendarCtrl($scope) {\n\tvar self = this;\n    this.weekDays = moment.weekdaysMin();\n    this.daysInMonth = [];\n    \n    this.getDaysInMonth = function() {\n        var days = self.date.daysInMonth(),\n            firstDay = moment(self.date).date(1).day();\n\n        var arr = [];\n        for(var i = 1; i <= (firstDay + days); i++) {\n            var day = null;\n            if(i > firstDay) {\n                 day =  {\n                    value: (i - firstDay),\n                    enabled: self.isDayEnabled(day)\n                };\n            }\n            arr.push(day);\n        }\n \n        return arr;\n    };\n    \n    this.isDayEnabled = function(day) {\n        return (!this.minDate || this.minDate <= day) && \n            (!this.maxDate || this.maxDate >= day);\n    };\n    \n    this.selectDate = function(dom) {\n        self.date.date(dom);\n    };\n\n    this.nextMonth = function() {\n        self.date.add(1, 'months');\n    };\n\n    this.prevMonth = function() {\n        self.date.subtract(1, 'months');\n    };\n    \n    this.init = function(date) {\n        self.date = date;\n    };\n    \n    this.updateDaysInMonth = function() {\n        self.daysInMonth = self.getDaysInMonth();\n    };\n    \n    $scope.$watch(function() { return  self.date.unix() }, function(newValue, oldValue) {\n        if(newValue && newValue !== oldValue)\n            self.updateDaysInMonth();\n    })\n    \n    this.isValidDay = function(day) {\n    \tvar minValid = true, maxValid = true;\n    \tvar date = moment($scope.date).date(day).startOf(\"day\").toDate();\n    \t\n    \tif ($scope.minDate) {\n    \t\tminValid = date >= $scope.minDate.toDate();\n    \t}\n    \t\n    \tif ($scope.maxDate) {\n    \t\tmaxValid = date <= $scope.maxDate.toDate();\n    \t}\n    \t\n    \treturn minValid && maxValid;\n    };\n    \n    self.updateDaysInMonth();\n}\n\nmodule.directive(\"mdpCalendar\", [\"$animate\", function($animate) {\n    return {\n        restrict: 'E',\n        bindToController: {\n            \"date\": \"=\",\n            \"minDate\": \"=\",\n            \"maxDate\": \"=\"\n        },\n        template: '<div class=\"mdp-calendar\">' +\n                    '<div layout=\"row\" layout-align=\"space-between center\">' +\n                        '<md-button aria-label=\"previous month\" class=\"md-icon-button\" ng-click=\"calendar.prevMonth()\"><md-icon md-font-set=\"material-icons\"> chevron_left </md-icon></md-button>' +\n                        '<div class=\"mdp-calendar-monthyear\" ng-show=\"!calendar.animating\">{{ calendar.date.format(\"MMMM YYYY\") }}</div>' +\n                        '<md-button aria-label=\"next month\" class=\"md-icon-button\" ng-click=\"calendar.nextMonth()\"><md-icon md-font-set=\"material-icons\"> chevron_right </md-icon></md-button>' +\n                    '</div>' +\n                    '<div layout=\"row\" layout-align=\"space-around center\" class=\"mdp-calendar-week-days\" ng-show=\"!calendar.animating\">' +\n                        '<div layout layout-align=\"center center\" ng-repeat=\"d in calendar.weekDays track by $index\">{{ d }}</div>' +\n                    '</div>' +\n                    '<div layout=\"row\" layout-align=\"start center\" layout-wrap class=\"mdp-calendar-days\" ng-class=\"{ \\'mdp-animate-next\\': calendar.animating }\" ng-show=\"!calendar.animating\" md-swipe-left=\"calendar.nextMonth()\" md-swipe-right=\"calendar.prevMonth()\">' +\n                        '<div layout layout-align=\"center center\" ng-repeat-start=\"day in calendar.daysInMonth track by $index\" ng-class=\"{ \\'mdp-day-placeholder\\': !day }\">' +\n                            '<md-button class=\"md-icon-button md-raised\" aria-label=\"Select day\" ng-if=\"day\" ng-class=\"{ \\'md-accent\\': calendar.date.date() == day.value }\" ng-click=\"calendar.selectDate(day.value)\" ng-disabled=\"!day.enabled\">{{ day.value }}</md-button>' +\n                        '</div>' +\n                        '<div flex=\"100\" ng-if=\"($index + 1) % 7 == 0\" ng-repeat-end></div>' +\n                    '</div>' +\n                '</div>',\n        controller: [\"$scope\", CalendarCtrl],\n        controllerAs: \"calendar\",\n        link: function(scope, element, attrs, ctrl) {\n            var animElements = [\n                element[0].querySelector(\".mdp-calendar-week-days\"),\n                element[0].querySelector('.mdp-calendar-days'),\n                element[0].querySelector('.mdp-calendar-monthyear')\n            ].map(function(a) {\n               return angular.element(a); \n            });\n                \n            scope.$watch(function() { return  ctrl.date.format(\"YYYYMM\") }, function(newValue, oldValue) {\n                var direction = null;\n                \n                if(newValue > oldValue)\n                    direction = \"mdp-animate-next\";\n                else if(newValue < oldValue)\n                    direction = \"mdp-animate-prev\";\n                \n                if(direction) {\n                    for(var i in animElements) {\n                        animElements[i].addClass(direction);\n                        $animate.removeClass(animElements[i], direction);\n                    }\n                }\n            });\n        }\n    }\n}]);\n\nmodule.directive(\"mdpDatePicker\", [\"$mdpDatePicker\", \"$timeout\", function($mdpDatePicker, $timeout) {\n    return  {\n        restrict: 'A',\n        require: '?ngModel',\n        scope: {\n            \"minDate\": \"=mdMinDate\",\n            \"maxDate\": \"=mdMaxDate\"\n        },\n        link: function(scope, element, attrs, ngModel) {\n            if ('undefined' !== typeof attrs.type && 'date' === attrs.type && ngModel) {\n                angular.element(element).on(\"click\", function(ev) {\n                \tev.preventDefault();\n                \t\n                \t$mdpDatePicker(ngModel.$modelValue, {\n                \t    minDate: scope.minDate, \n                \t    maxDate: scope.maxDate,\n                \t    targetEvent: ev\n            \t    }).then(function(selectedDate) {\n                \t\t$timeout(function() {\n                \t\t\tvar selectedMoment = moment(selectedDate).startOf(\"day\");\n                \t\t\tvar minMoment = scope.minDate ? moment(scope.minDate) : null;\n                \t\t\tvar maxMoment = scope.maxDate ? moment(scope.maxDate) : null;\n                \t\t\t\n                \t\t\t// validate min and max date\n                        \tif (minMoment && maxMoment) {\n                        \t\tif (maxMoment.isBefore(minMoment)) {\n                        \t\t\tmaxMoment = moment(minMoment).add(1, 'days');\n                        \t\t}\n                        \t}\n                \t\t\t\n                \t\t\tif (minMoment && minMoment.isValid()) {\n                \t\t\t\tminMoment.startOf(\"day\");\n                \t\t\t\tngModel.$setValidity('mindate', selectedMoment.toDate() >= minMoment.toDate());\n                \t\t\t}\n                \t\t\t\n                \t\t\tif (maxMoment && maxMoment.isValid()) {\n                \t\t\t\tmaxMoment.startOf(\"day\");\n                \t\t\t\tngModel.$setValidity('maxdate', selectedMoment.toDate() <= maxMoment.toDate());\n                \t\t\t}\n                    \t      \n                \t\t\tngModel.$setViewValue(selectedMoment.format(\"YYYY-MM-DD\")); \n                \t\t\tngModel.$render(); \n                          });\n                      });\n                });\n            }\n        }\n    };\n}]);\nfunction TimePickerCtrl($scope, $mdDialog, currentDate, $mdMedia) {\n\tvar self = this;\n    this.VIEW_HOURS = 1;\n    this.VIEW_MINUTES = 2;\n    this.currentDate = currentDate;\n    this.currentView = this.VIEW_HOURS;\n    this.currentMoment = moment(self.currentDate);\n    \n    this.clockHours = parseInt(this.currentMoment.format(\"h\"));\n    this.clockMinutes = parseInt(this.currentMoment.minutes());\n\t\n    $scope.$watch(function() { return self.clockHours }, function(newValue, oldValue) {\n        if(angular.isDefined(oldValue)) {\n            if(self.currentMoment.format(\"A\") == \"AM\")\n                self.currentMoment.hour(self.clockHours);\n            else\n                self.currentMoment.hour(self.clockHours < 12 ? self.clockHours + 12 : self.clockHours);\n        }\n    });\n    \n     $scope.$watch(function() { return self.clockMinutes }, function(newValue, oldValue) {\n        if(angular.isDefined(oldValue)) {\n            self.currentMoment.minutes(newValue < 60 ? newValue : 0);\n        }\n    });\n    \n\t$scope.$mdMedia = $mdMedia;\n    \n\tthis.setAM = function() {\n        if(self.currentMoment.format(\"A\") == \"PM\")\n            self.currentMoment.hour(self.currentMoment.hour() - 12);\n\t};\n    \n    this.setPM = function() {\n        if(self.currentMoment.format(\"A\") == \"AM\")\n            self.currentMoment.hour(self.currentMoment.hour() + 12);\n\t};\n\t\n\tthis.now = function() {\n\t\tself.currentMoment = moment();\n\t};\n    \n    this.cancel = function() {\n        $mdDialog.cancel();\n    };\n\n    this.confirm = function() {\n        $mdDialog.hide(this.currentMoment.toDate());\n    };\n}\n\nfunction ClockCtrl($scope) {\n    var TYPE_HOURS = \"hours\";\n    var TYPE_MINUTES = \"minutes\";\n    \n    this.STEP_DEG = 360 / 12;\n    var self = this;\n    this.steps = [];\n    this.selected = 0;\n    \n    this.CLOCK_TYPES = {\n        \"hours\": {\n            range: 12,\n        },\n        \"minutes\": {\n            range: 60,\n        }\n    }\n    \n    this.getPointerStyle = function() {\n        var divider = 1;\n        switch(self.type) {\n            case TYPE_HOURS:\n                divider = 12;\n                break;\n            case TYPE_MINUTES:\n                divider = 60;\n                break;\n        }  \n        var degrees = Math.round(self.selected * (360 / divider)) - 180;\n        return { \n            \"-webkit-transform\": \"rotate(\" + degrees + \"deg)\",\n            \"-ms-transform\": \"rotate(\" + degrees + \"deg)\",\n            \"transform\": \"rotate(\" + degrees + \"deg)\"\n        }\n    };\n    \n    this.setTimeByDeg = function(deg) {\n        deg = deg >= 360 ? 0 : deg;\n        var divider = 0;\n        switch(self.type) {\n            case TYPE_HOURS:\n                divider = 12;\n                break;\n            case TYPE_MINUTES:\n                divider = 60;\n                break;\n        }  \n        \n        self.setTime(\n            Math.round(divider / 360 * deg)\n        );\n    };\n    \n    this.setTime = function(time, type) {\n        this.selected = time;\n        if (!type) {\n        \ttype = self.type;\n        }\n        \n        switch(type) {\n        case TYPE_HOURS:\n        \t$scope.date.hours(time);\n            break;\n        case TYPE_MINUTES:\n        \t$scope.date.minutes(time);\n            break;\n        }\n    };\n    \n    this.init = function(type) {\n        self.type = type;\n        switch(type) {\n            case TYPE_HOURS:\n                for(var i = 1; i <= 12; i++)\n                    self.steps.push(i);\n                self.selected = $scope.date.hours() || 0;\n                    \n                break;\n            case TYPE_MINUTES:\n                for(var i = 5; i <= 55; i+=5)\n                    self.steps.push(i);\n                self.steps.push(0);\n                self.selected = $scope.date.minutes() || 0;\n                \n                break;\n        }\n    };\n    \n    $scope.$watch('date', function(newValue, oldValue) {\n    \tself.setTime(newValue.hours(), TYPE_HOURS);\n    \tself.setTime(newValue.minutes(), TYPE_MINUTES);\n    });\n}\n\nmodule.directive(\"mdpClock\", [\"$animate\", \"$timeout\", function($animate, $timeout) {\n    return {\n        restrict: 'E',\n        scope: {\n            'type': '@?',\n            'date' : '='\n        },\n        replace: true,\n        template: '<div class=\"mdp-clock\">' +\n                        '<div class=\"mdp-clock-container\">' +\n                            '<md-toolbar class=\"mdp-clock-center md-primary\"></md-toolbar>' +\n                            '<md-toolbar ng-style=\"clock.getPointerStyle()\" class=\"mdp-pointer md-primary\">' +\n                                '<span class=\"mdp-clock-selected md-button md-raised md-primary\"></span>' +\n                            '</md-toolbar>' +\n                            '<md-button ng-class=\"{ \\'md-primary\\': clock.selected == step }\" class=\"md-icon-button md-raised mdp-clock-deg{{ ::(clock.STEP_DEG * ($index + 1)) }}\" ng-repeat=\"step in clock.steps\" ng-click=\"clock.setTime(step)\">{{ step }}</md-button>' +\n                        '</div>' +\n                    '</div>',\n        controller: [\"$scope\", ClockCtrl],\n        controllerAs: \"clock\",\n        link: function(scope, element, attrs, ctrl) {\n                \n            var container = angular.element(element[0].querySelector(\".mdp-clock-container\")),\n                pointer = angular.element(element[0].querySelector(\".mdp-pointer\"));\n            \n            scope.type = scope.type || \"hours\";\n            $timeout(function() {\n            \tctrl.init(scope.type);\n            });\n            \n            var onEvent = function(event) {\n                if(event.target != container[0]) return;\n                var x = ((event.target.offsetWidth / 2) - event.offsetX),\n                    y = (event.offsetY - (event.target.offsetHeight / 2));\n\n                var deg = Math.round((Math.atan2(x, y) * (180 / Math.PI)));\n                $timeout(function() {\n                    ctrl.setTimeByDeg(deg + 180);\n                });\n            }; \n            \n            container.on(\"mousedown\", function() {\n               container.on(\"mousemove\", onEvent);\n            });\n            \n            container.on(\"mouseup mouseout\", function() {\n               container.off(\"mousemove\", onEvent);\n            });\n            \n            container.on(\"click\", onEvent);\n            scope.$on(\"$destroy\", function() {\n                container.off(\"click\", onEvent);\n                container.off(\"mousemove\", onEvent); \n            });\n        }\n    }\n}]);\n\nmodule.provider(\"$mdpTimePicker\", function() {\n    var LABEL_OK = \"OK\",\n        LABEL_CANCEL = \"Cancel\",\n        LABEL_NOW = \"Now\"; \n        \n    this.setOKButtonLabel = function(label) {\n        LABEL_OK = label;\n    };\n    \n    this.setCancelButtonLabel = function(label) {\n        LABEL_CANCEL = label;\n    };\n    \n    this.$get = [\"$mdDialog\", function($mdDialog) {\n        var timePicker = function(targetEvent, currentDate) {\n            if(!angular.isDate(currentDate)) currentDate = Date.now();\n    \n            return $mdDialog.show({\n                controller:  ['$scope', '$mdDialog', 'currentDate', '$mdMedia', TimePickerCtrl],\n                controllerAs: 'timepicker',\n                clickOutsideToClose: true,\n                template: '<md-dialog aria-label=\"\" class=\"mdp-timepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\n                            '<md-dialog-content layout-gt-xs=\"row\" layout-wrap>' +\n                                '<md-toolbar layout-gt-xs=\"column\" layout-xs=\"row\" layout-align=\"center center\" flex class=\"mdp-timepicker-time md-hue-1 md-primary\">' +\n                                    '<div class=\"mdp-timepicker-selected-time\">' +\n                                        '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_HOURS }\" ng-click=\"timepicker.currentView = timepicker.VIEW_HOURS\">{{ timepicker.currentMoment.format(\"h\") }}</span>:' + \n                                        '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_MINUTES }\" ng-click=\"timepicker.currentView = timepicker.VIEW_MINUTES\">{{ timepicker.currentMoment.format(\"mm\") }}</span>' +\n                                    '</div>' +\n                                    '<div layout=\"column\" class=\"mdp-timepicker-selected-ampm\">' + \n                                        '<span ng-click=\"timepicker.setAM()\" ng-class=\"{ \\'active\\': timepicker.currentMoment.format(\\'A\\') == \\'AM\\' }\">AM</span>' +\n                                        '<span ng-click=\"timepicker.setPM()\" ng-class=\"{ \\'active\\': timepicker.currentMoment.format(\\'A\\') == \\'PM\\' }\">PM</span>' +\n                                    '</div>' + \n                                '</md-toolbar>' +\n                                '<div>' +\n                                    '<div class=\"mdp-clock-switch-container\" ng-switch=\"timepicker.currentView\" layout layout-align=\"center center\">' +\n\t                                    '<mdp-clock class=\"mdp-animation-zoom\" date=\"timepicker.currentMoment\" type=\"hours\" ng-switch-when=\"1\"></mdp-clock>' +\n\t                                    '<mdp-clock class=\"mdp-animation-zoom\" date=\"timepicker.currentMoment\" type=\"minutes\" ng-switch-when=\"2\"></mdp-clock>' +\n                                    '</div>' +\n                                    \n                                    '<md-dialog-actions layout=\"row\">' +\n\t                                    '<md-button ng-click=\"timepicker.now()\" aria-label=\"' + LABEL_NOW + '\">' + LABEL_NOW + '</md-button>' +\n\t                                \t'<span flex></span>' +\n                                        '<md-button ng-click=\"timepicker.cancel()\" aria-label=\"' + LABEL_CANCEL + '\">' + LABEL_CANCEL + '</md-button>' +\n                                        '<md-button ng-click=\"timepicker.confirm()\" class=\"md-primary\" aria-label=\"' + LABEL_OK + '\">' + LABEL_OK + '</md-button>' +\n                                    '</md-dialog-actions>' +\n                                '</div>' +\n                            '</md-dialog-content>' +\n                        '</md-dialog>',\n                targetEvent: targetEvent,\n                locals: {\n                    currentDate: currentDate\n                }\n            });\n        };\n    \n        return timePicker;\n    }];\n});\n\nmodule.directive(\"mdpTimePicker\", [\"$mdpTimePicker\", \"$timeout\", function($mdpTimePicker, $timeout) {\n    return  {\n        restrict: 'A',\n        require: '?ngModel',\n        scope: {\n        \tformat : \"@mdPattern\"\n        },\n        link: function(scope, element, attrs, ngModel) {\n            if ('undefined' !== typeof attrs.type && 'time' === attrs.type && ngModel) {\n                angular.element(element).on(\"click\", function(ev) {\n                \tev.preventDefault();\n                \t\n                \t$mdpTimePicker(ev, ngModel.$modelValue).then(function(selectedDate) {\n                \t\t$timeout(function() {\n                \t\t\tvar format = \"HH:mm\";\n                    \t    if (scope.format) {\n                    \t    \tformat = scope.format;\n                    \t    }  \n                \t\t\t\n                \t\t\tngModel.$setViewValue(moment(selectedDate).format(format)); \n                \t\t\tngModel.$render(); \n                          });\n                      });\n                });\n            }\n        }\n    };\n}]);\n})();"],"sourceRoot":"/source/"}
=======
{"version":3,"sources":["mdPickers.min.js"],"names":["DatePickerCtrl","$scope","$mdDialog","currentDate","$mdMedia","$timeout","self","this","currentMoment","moment","selectingYear","yearItems","currentIndex_","PAGE_SIZE","START","getItemAtIndex","index","getLength","Math","floor","year","selectYear","animate","showYear","yearTopIndex","showCalendar","cancel","confirm","hide","toDate","animating","angular","noop","then","CalendarCtrl","weekDays","weekdaysMin","getDaysInMonth","days","daysInMonth","firstDay","date","day","arr","i","push","selectDate","dom","nextMonth","add","prevMonth","subtract","init","TimePickerCtrl","VIEW_HOURS","VIEW_MINUTES","currentView","clockHours","parseInt","format","clockMinutes","minutes","$watch","newValue","oldValue","isDefined","hour","setAM","setPM","ClockCtrl","TYPE_HOURS","TYPE_MINUTES","ngModel","STEP_DEG","steps","selected","CLOCK_TYPES","hours","range","setTimeByDeg","deg","divider","type","setTime","round","getPointerStyle","degrees","-webkit-transform","-ms-transform","transform","time","$setViewValue","$render","$modelValue","module","provider","LABEL_OK","LABEL_CANCEL","setOKButtonLabel","label","setCancelButtonLabel","$get","datePicker","targetEvent","isDate","Date","now","show","controller","controllerAs","clickOutsideToClose","template","locals","directive","$animate","restrict","scope","link","element","attrs","ctrl","animElements","querySelector","map","a","direction","addClass","removeClass","$mdpDatePicker","require","on","ev","preventDefault","selectedDate","replace","ctrls","onEvent","event","containerCoords","currentTarget","getClientRects","x","offsetWidth","pageX","left","y","pageY","top","offsetHeight","atan2","PI","off","$on","timePicker"],"mappings":"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","file":"mdPickers.min.js","sourcesContent":["(function() {\n\"use strict\";\nvar module = angular.module(\"mdPickers\", [\n\t\"ngMaterial\",\n\t\"ngAnimate\",\n\t\"ngAria\"\n]); \n/* global = */\n\nfunction DatePickerCtrl($scope, $mdDialog, currentDate, $mdMedia, $timeout) {\n    var self = this;\n\n    this.currentDate = currentDate;\n    this.currentMoment = moment(self.currentDate);\n    this.selectingYear = false;\n\n    $scope.$mdMedia = $mdMedia;\n    this.yearItems = {\n        currentIndex_: 0,\n        PAGE_SIZE: 5,\n        START: 1900,\n        getItemAtIndex: function(index) {\n            if(this.currentIndex_ < index)\n                this.currentIndex_ = index;\n            return this.START + index;\n        },\n        getLength: function() {\n            return this.currentIndex_ + Math.floor(this.PAGE_SIZE / 2);\n        }\n    }\n    \n    $scope.year = this.currentMoment.year();\n\n\tthis.selectYear = function(year) {\n        self.currentMoment.year(year);\n        $scope.year = year;\n        self.selectingYear = false;\n        self.animate();\n    };\n    \n    this.showYear = function() { \n        self.yearTopIndex = (self.currentMoment.year() - self.yearItems.START) + Math.floor(self.yearItems.PAGE_SIZE / 2);\n        self.yearItems.currentIndex_ = (self.currentMoment.year() - self.yearItems.START) + 1;\n        self.selectingYear = true;\n    };\n    \n    this.showCalendar = function() {\n        self.selectingYear = false;\n    };\n\n    this.cancel = function() {\n        $mdDialog.cancel();\n    };\n\n    this.confirm = function() {\n        $mdDialog.hide(this.currentMoment.toDate());\n    };\n    \n    this.animate = function() {\n        self.animating = true;\n        $timeout(angular.noop).then(function() {\n            self.animating = false;\n        })  \n    };\n}\n\nmodule.provider(\"$mdpDatePicker\", function() {\n    var LABEL_OK = \"ok\",\n        LABEL_CANCEL = \"cancel\"; \n        \n    this.setOKButtonLabel = function(label) {\n        LABEL_OK = label;\n    };\n    \n    this.setCancelButtonLabel = function(label) {\n        LABEL_CANCEL = label;\n    };\n    \n    this.$get = [\"$mdDialog\", function($mdDialog) {\n        var datePicker = function(targetEvent, currentDate) {\n            if(!angular.isDate(currentDate)) currentDate = Date.now();\n    \n            return $mdDialog.show({\n                controller:  ['$scope', '$mdDialog', 'currentDate', '$mdMedia', '$timeout', DatePickerCtrl],\n                controllerAs: 'datepicker',\n                clickOutsideToClose: true,\n                template: '<md-dialog aria-label=\"\" class=\"mdp-datepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\n                            '<md-dialog-content layout=\"row\" layout-wrap>' +\n                                '<div layout=\"column\" layout-align=\"start center\">' +\n                                    '<md-toolbar layout-align=\"start start\" flex class=\"mdp-datepicker-date-wrapper md-hue-1 md-primary\" layout=\"column\">' +\n                                        '<span class=\"mdp-datepicker-year\" ng-click=\"datepicker.showYear()\" ng-class=\"{ \\'active\\': datepicker.selectingYear }\">{{ datepicker.currentMoment.format(\\'YYYY\\') }}</span>' +\n                                        '<span class=\"mdp-datepicker-date\" ng-click=\"datepicker.showCalendar()\" ng-class=\"{ \\'active\\': !datepicker.selectingYear }\">{{ datepicker.currentMoment.format(\"ddd, MMM DD\") }}</span> ' +\n                                    '</md-toolbar>' + \n                                '</div>' +  \n                                '<div>' + \n                                    '<div class=\"mdp-datepicker-select-year mdp-animation-zoom\" layout=\"column\" ng-if=\"datepicker.selectingYear\">' +\n                                        '<md-virtual-repeat-container md-auto-shrink md-top-index=\"datepicker.yearTopIndex\">' +\n                                            '<div flex md-virtual-repeat=\"item in datepicker.yearItems\" md-on-demand class=\"repeated-year\">' +\n                                                '<span class=\"md-button\" ng-click=\"datepicker.selectYear(item)\" md-ink-ripple ng-class=\"{ \\'md-primary current\\': item == year }\">{{ item }}</span>' +\n                                            '</div>' +\n                                        '</md-virtual-repeat-container>' +\n                                    '</div>' +\n                                    '<mdp-calendar ng-if=\"!datepicker.selectingYear\" class=\"mdp-animation-zoom\" date=\"datepicker.currentMoment\"></mdp-calendar>' +\n                                    '<md-dialog-actions layout-align=\"end center\" layout=\"row\">' +\n                                        '<md-button ng-click=\"datepicker.cancel()\" aria-label=\"' + LABEL_CANCEL + '\">' + LABEL_CANCEL + '</md-button>' +\n                                        '<md-button ng-click=\"datepicker.confirm()\" aria-label=\"' + LABEL_OK + '\">' + LABEL_OK + '</md-button>' +\n                                    '</md-dialog-actions>' +\n                                '</div>' +\n                            '</md-dialog-content>' +\n                        '</md-dialog>',\n                targetEvent: targetEvent,\n                locals: {\n                    currentDate: currentDate\n                }\n            });\n        };\n    \n        return datePicker;\n    }];\n});\n\nfunction CalendarCtrl($scope) {\n    var self = this;\n    this.currentMoment;\n    this.weekDays = moment.weekdaysMin();\n    \n    this.getDaysInMonth = function() {\n        var days = self.currentMoment.daysInMonth(),\n            firstDay = moment(self.currentMoment).date(1).day();\n\n        var arr = [];\n        for(var i = 1; i <= (firstDay + days); i++)\n            arr.push(i > firstDay ? (i - firstDay) : false);\n\n        return arr;\n    };\n    \n    this.selectDate = function(dom) {\n        self.currentMoment.date(dom);\n    };\n\n    this.nextMonth = function() {\n        self.currentMoment.add(1, 'months');\n    };\n\n    this.prevMonth = function() {\n        self.currentMoment.subtract(1, 'months');\n    };\n    \n    this.init = function(date) {\n        self.currentMoment = date;\n    };\n}\n\nmodule.directive(\"mdpCalendar\", [\"$animate\", function($animate) {\n    return {\n        restrict: 'E',\n        scope: {\n            \"date\": \"=\"\n        },\n        template: '<div class=\"mdp-calendar\">' +\n                    '<div layout=\"row\" layout-align=\"space-between center\">' +\n                        '<md-button aria-label=\"previous month\" class=\"md-icon-button\" ng-click=\"calendar.prevMonth()\"><md-icon md-font-set=\"material-icons\"> chevron_left </md-icon></md-button>' +\n                        '<div class=\"mdp-calendar-monthyear\" ng-show=\"!calendar.animating\">{{ calendar.currentMoment.format(\"MMMM YYYY\") }}</div>' +\n                        '<md-button aria-label=\"next month\" class=\"md-icon-button\" ng-click=\"calendar.nextMonth()\"><md-icon md-font-set=\"material-icons\"> chevron_right </md-icon></md-button>' +\n                    '</div>' +\n                    '<div layout=\"row\" layout-align=\"space-around center\" class=\"mdp-calendar-week-days\" ng-show=\"!calendar.animating\">' +\n                        '<div layout layout-align=\"center center\" ng-repeat=\"d in calendar.weekDays track by $index\">{{ d }}</div>' +\n                    '</div>' +\n                    '<div layout=\"row\" layout-wrap class=\"mdp-calendar-days\" ng-class=\"{ \\'mdp-animate-next\\': calendar.animating }\" ng-show=\"!calendar.animating\">' +\n                        '<div layout layout-align=\"center center\" ng-repeat-start=\"n in calendar.getDaysInMonth() track by $index\" ng-class=\"{ \\'mdp-day-placeholder\\': n === false }\">' +\n                            '<md-button class=\"md-icon-button md-raised\" aria-label=\"seleziona giorno\" ng-if=\"n !== false\" ng-class=\"{\\'md-accent\\': calendar.currentMoment.date() == n}\" ng-click=\"calendar.selectDate(n)\">{{ n }}</md-button>' +\n                        '</div>' +\n                        '<div flex=\"100\" ng-if=\"($index + 1) % 7 == 0\" ng-repeat-end></div>' +\n                    '</div>' +\n                '</div>',\n        controller: [\"$scope\", CalendarCtrl],\n        controllerAs: \"calendar\",\n        link: function(scope, element, attrs, ctrl) {\n            var animElements = [\n                element[0].querySelector(\".mdp-calendar-week-days\"),\n                element[0].querySelector('.mdp-calendar-days'),\n                element[0].querySelector('.mdp-calendar-monthyear')\n            ];\n            animElements = animElements.map(function(a) {\n               return angular.element(a); \n            });\n                \n            ctrl.init(scope.date);\n            \n            scope.$watch(function() { return  scope.date.format(\"YYYYMM\") }, function(newValue, oldValue) {\n                var direction = null;\n                \n                if(newValue > oldValue)\n                    direction = \"mdp-animate-next\";\n                else if(newValue < oldValue)\n                    direction = \"mdp-animate-prev\";\n                \n                if(direction) {\n                    for(var i in animElements) {\n                        animElements[i].addClass(direction);\n                        $animate.removeClass(animElements[i], direction);\n                    }\n                }\n            });\n        }\n    }\n}]);\n\nmodule.directive(\"mdpDatePicker\", [\"$mdpDatePicker\", \"$timeout\", function($mdpDatePicker, $timeout) {\n    return  {\n        restrict: 'A',\n        require: '?ngModel',\n        link: function(scope, element, attrs, ngModel) {\n            if ('undefined' !== typeof attrs.type && 'date' === attrs.type && ngModel) {\n                angular.element(element).on(\"click\", function(ev) {\n                  \t\tev.preventDefault();\n                      $mdpDatePicker(ev, ngModel.$modelValue).then(function(selectedDate) {\n                          $timeout(function() { \n                            \tngModel.$setViewValue(moment(selectedDate).format(\"YYYY-MM-DD\")); \n                            \tngModel.$render(); \n                          });\n                      });\n                });\n            }\n        }\n    };\n}]);\nfunction TimePickerCtrl($scope, $mdDialog, currentDate, $mdMedia) {\n\tvar self = this;\n    this.VIEW_HOURS = 1;\n    this.VIEW_MINUTES = 2;\n    this.currentDate = currentDate;\n    this.currentView = this.VIEW_HOURS;\n    this.currentMoment = moment(self.currentDate);\n    \n    this.clockHours = parseInt(this.currentMoment.format(\"h\"));\n    this.clockMinutes = parseInt(this.currentMoment.minutes());\n\t\n    $scope.$watch(function() { return self.clockHours }, function(newValue, oldValue) {\n        if(angular.isDefined(oldValue)) {\n            if(self.currentMoment.format(\"A\") == \"AM\")\n                self.currentMoment.hour(self.clockHours);\n            else\n                self.currentMoment.hour(self.clockHours < 12 ? self.clockHours + 12 : self.clockHours);\n        }\n    });\n    \n     $scope.$watch(function() { return self.clockMinutes }, function(newValue, oldValue) {\n        if(angular.isDefined(oldValue)) {\n            self.currentMoment.minutes(newValue < 60 ? newValue : 0);\n        }\n    });\n    \n\t$scope.$mdMedia = $mdMedia;\n    \n\tthis.setAM = function() {\n        if(self.currentMoment.format(\"A\") == \"PM\")\n            self.currentMoment.hour(self.currentMoment.hour() - 12);\n\t};\n    \n    this.setPM = function() {\n        if(self.currentMoment.format(\"A\") == \"AM\")\n            self.currentMoment.hour(self.currentMoment.hour() + 12);\n\t};\n    \n    this.cancel = function() {\n        $mdDialog.cancel();\n    };\n\n    this.confirm = function() {\n        $mdDialog.hide(this.currentMoment.toDate());\n    };\n}\n\nfunction ClockCtrl($scope) {\n    var TYPE_HOURS = \"hours\";\n    var TYPE_MINUTES = \"minutes\";\n    this.ngModel;\n    \n    this.STEP_DEG = 360 / 12;\n    var self = this;\n    this.steps = [];\n    this.selected = 0;\n    \n    this.CLOCK_TYPES = {\n        \"hours\": {\n            range: 12,\n        },\n        \"minutes\": {\n            range: 60,\n        }\n    }\n    \n    this.setTimeByDeg = function(deg) {\n        deg = deg >= 360 ? 0 : deg;\n        var divider = 0;\n        switch(self.type) {\n            case TYPE_HOURS:\n                divider = 12;\n                break;\n            case TYPE_MINUTES:\n                divider = 60;\n                break;\n        }  \n        \n        self.setTime(\n            Math.round(divider / 360 * deg)\n        );\n    };\n    \n    this.getPointerStyle = function() {\n        var divider = 1;\n        switch(self.type) {\n            case TYPE_HOURS:\n                divider = 12;\n                break;\n            case TYPE_MINUTES:\n                divider = 60;\n                break;\n        }  \n        var degrees = Math.round(self.selected * (360 / divider)) - 180;\n        return { \n            \"-webkit-transform\": \"rotate(\" + degrees + \"deg)\",\n            \"-ms-transform\": \"rotate(\" + degrees + \"deg)\",\n            \"transform\": \"rotate(\" + degrees + \"deg)\"\n        }\n    };\n    \n    this.setTime = function(time) {\n        this.selected = time;\n        self.ngModel.$setViewValue(time);\n        self.ngModel.$render();\n    };\n    \n    this.init = function(ngModel, type) {\n        self.type = type;\n        switch(type) {\n            case TYPE_HOURS:\n                for(var i = 1; i <= 12; i++)\n                    self.steps.push(i);\n                    \n                break;\n            case TYPE_MINUTES:\n                for(var i = 5; i <= 55; i+=5)\n                    self.steps.push(i);\n                self.steps.push(0);\n                \n                break;\n                \n        }\n        \n        self.ngModel = ngModel;\n        self.selected = self.ngModel.$modelValue || 0;\n    };\n}\n\nmodule.directive(\"mdpClock\", [\"$animate\", \"$timeout\", function($animate, $timeout) {\n    return {\n        restrict: 'E',\n        require: ['mdpClock', 'ngModel'],\n        scope: {\n            'type': '@?'\n        },\n        replace: true,\n        template: '<div class=\"mdp-clock\">' +\n                        '<div class=\"mdp-clock-container\">' +\n                            '<md-toolbar class=\"mdp-clock-center md-primary\"></md-toolbar>' +\n                            '<md-toolbar ng-style=\"clock.getPointerStyle()\" class=\"mdp-pointer md-primary\">' +\n                                '<span class=\"mdp-clock-selected md-button md-raised md-primary\"></span>' +\n                            '</md-toolbar>' +\n                            '<md-button ng-class=\"{ \\'md-primary\\': clock.selected == step }\" class=\"md-icon-button md-raised mdp-clock-deg{{ ::(clock.STEP_DEG * ($index + 1)) }}\" ng-repeat=\"step in clock.steps\" ng-click=\"clock.setTime(step)\">{{ step }}</md-button>' +\n                        '</div>' +\n                    '</div>',\n        controller: [\"$scope\", ClockCtrl],\n        controllerAs: \"clock\",\n        link: function(scope, element, attrs, ctrls) {\n            var ctrl = ctrls[0],\n                ngModel = ctrls[1];\n                \n            var pointer = angular.element(element[0].querySelector(\".mdp-pointer\"));\n            \n            scope.type = scope.type || \"hours\";\n            $timeout(function() {\n                ctrl.init(ngModel, scope.type);\n            });\n            \n            var onEvent = function(event) {\n                var containerCoords = event.currentTarget.getClientRects()[0];\n                var x = ((event.currentTarget.offsetWidth / 2) - (event.pageX - containerCoords.left)),\n                    y = ((event.pageY - containerCoords.top) - (event.currentTarget.offsetHeight / 2));\n\n                var deg = Math.round((Math.atan2(x, y) * (180 / Math.PI)));\n                $timeout(function() {\n                    ctrl.setTimeByDeg(deg + 180);\n                });\n            }; \n            \n            element.on(\"mousedown\", function() {\n               element.on(\"mousemove\", onEvent);\n            });\n            \n            element.on(\"mouseup mouseleave\", function() {\n               element.off(\"mousemove\", onEvent);\n            });\n            \n            element.on(\"click\", onEvent);\n            scope.$on(\"$destroy\", function() {\n                element.off(\"click\", onEvent);\n                element.off(\"mousemove\", onEvent); \n            });\n        }\n    }\n}]);\n\nmodule.provider(\"$mdpTimePicker\", function() {\n    var LABEL_OK = \"ok\",\n        LABEL_CANCEL = \"cancel\"; \n        \n    this.setOKButtonLabel = function(label) {\n        LABEL_OK = label;\n    };\n    \n    this.setCancelButtonLabel = function(label) {\n        LABEL_CANCEL = label;\n    };\n    \n    this.$get = [\"$mdDialog\", function($mdDialog) {\n        var timePicker = function(targetEvent, currentDate) {\n            if(!angular.isDate(currentDate)) currentDate = Date.now();\n    \n            return $mdDialog.show({\n                controller:  ['$scope', '$mdDialog', 'currentDate', '$mdMedia', TimePickerCtrl],\n                controllerAs: 'timepicker',\n                clickOutsideToClose: true,\n                template: '<md-dialog aria-label=\"\" class=\"mdp-timepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\n                            '<md-dialog-content layout-gt-xs=\"row\" layout-wrap>' +\n                                '<md-toolbar layout-gt-xs=\"column\" layout-xs=\"row\" layout-align=\"center center\" flex class=\"mdp-timepicker-time md-hue-1 md-primary\">' +\n                                    '<div class=\"mdp-timepicker-selected-time\">' +\n                                        '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_HOURS }\" ng-click=\"timepicker.currentView = timepicker.VIEW_HOURS\">{{ timepicker.currentMoment.format(\"h\") }}</span>:' + \n                                        '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_MINUTES }\" ng-click=\"timepicker.currentView = timepicker.VIEW_MINUTES\">{{ timepicker.currentMoment.format(\"mm\") }}</span>' +\n                                    '</div>' +\n                                    '<div layout=\"column\" class=\"mdp-timepicker-selected-ampm\">' + \n                                        '<span ng-click=\"timepicker.setAM()\" ng-class=\"{ \\'active\\': timepicker.currentMoment.format(\\'A\\') == \\'AM\\' }\">AM</span>' +\n                                        '<span ng-click=\"timepicker.setPM()\" ng-class=\"{ \\'active\\': timepicker.currentMoment.format(\\'A\\') == \\'PM\\' }\">PM</span>' +\n                                    '</div>' + \n                                '</md-toolbar>' +\n                                '<div>' +\n                                    '<div class=\"mdp-clock-switch-container\" ng-switch=\"timepicker.currentView\" layout layout-align=\"center center\">' +\n\t\t\t\t\t\t\t\t\t   '<mdp-clock class=\"mdp-animation-zoom\" ng-model=\"timepicker.clockHours\" type=\"hours\" ng-switch-when=\"1\"></mdp-clock>' +\n                                       '<mdp-clock class=\"mdp-animation-zoom\" ng-model=\"timepicker.clockMinutes\" type=\"minutes\" ng-switch-when=\"2\"></mdp-clock>' +\n                                    '</div>' +\n                                    \n                                    '<md-dialog-actions layout-align=\"end center\" layout=\"row\">' +\n                                        '<md-button ng-click=\"timepicker.cancel()\" aria-label=\"' + LABEL_CANCEL + '\">' + LABEL_CANCEL + '</md-button>' +\n                                        '<md-button ng-click=\"timepicker.confirm()\" aria-label=\"' + LABEL_OK + '\">' + LABEL_OK + '</md-button>' +\n                                    '</md-dialog-actions>' +\n                                '</div>' +\n                            '</md-dialog-content>' +\n                        '</md-dialog>',\n                targetEvent: targetEvent,\n                locals: {\n                    currentDate: currentDate\n                }\n            });\n        };\n    \n        return timePicker;\n    }];\n});\n})();"],"sourceRoot":"/source/"}
>>>>>>> release/0.5.1
=======
{"version":3,"sources":["mdPickers.min.js"],"names":["DatePickerCtrl","$scope","$mdDialog","currentDate","$mdMedia","$timeout","self","this","currentMoment","moment","selectingYear","yearItems","currentIndex_","PAGE_SIZE","START","getItemAtIndex","index","getLength","Math","floor","year","selectYear","animate","showYear","yearTopIndex","showCalendar","cancel","confirm","hide","toDate","animating","angular","noop","then","CalendarCtrl","weekDays","weekdaysMin","getDaysInMonth","days","daysInMonth","firstDay","date","day","arr","i","push","selectDate","dom","nextMonth","add","prevMonth","subtract","init","TimePickerCtrl","VIEW_HOURS","VIEW_MINUTES","currentView","clockHours","parseInt","format","clockMinutes","minutes","$watch","newValue","oldValue","isDefined","hour","setAM","setPM","ClockCtrl","TYPE_HOURS","TYPE_MINUTES","ngModel","STEP_DEG","steps","selected","CLOCK_TYPES","hours","range","setTimeByDeg","deg","divider","type","setTime","round","getPointerStyle","degrees","-webkit-transform","-ms-transform","transform","time","$setViewValue","$render","$modelValue","module","provider","LABEL_OK","LABEL_CANCEL","setOKButtonLabel","label","setCancelButtonLabel","$get","datePicker","targetEvent","isDate","Date","now","show","controller","controllerAs","clickOutsideToClose","template","locals","directive","$animate","restrict","scope","link","element","attrs","ctrl","animElements","querySelector","map","a","direction","addClass","removeClass","$mdpDatePicker","require","on","ev","preventDefault","selectedDate","replace","ctrls","onEvent","event","containerCoords","currentTarget","getClientRects","x","offsetWidth","pageX","left","y","pageY","top","offsetHeight","atan2","PI","off","$on","timePicker","$mdpTimePicker"],"mappings":"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","file":"mdPickers.min.js","sourcesContent":["(function() {\n\"use strict\";\nvar module = angular.module(\"mdPickers\", [\n\t\"ngMaterial\",\n\t\"ngAnimate\",\n\t\"ngAria\"\n]); \n/* global = */\n\nfunction DatePickerCtrl($scope, $mdDialog, currentDate, $mdMedia, $timeout) {\n    var self = this;\n\n    this.currentDate = currentDate;\n    this.currentMoment = moment(self.currentDate);\n    this.selectingYear = false;\n\n    $scope.$mdMedia = $mdMedia;\n    this.yearItems = {\n        currentIndex_: 0,\n        PAGE_SIZE: 5,\n        START: 1900,\n        getItemAtIndex: function(index) {\n            if(this.currentIndex_ < index)\n                this.currentIndex_ = index;\n            return this.START + index;\n        },\n        getLength: function() {\n            return this.currentIndex_ + Math.floor(this.PAGE_SIZE / 2);\n        }\n    }\n    \n    $scope.year = this.currentMoment.year();\n\n\tthis.selectYear = function(year) {\n        self.currentMoment.year(year);\n        $scope.year = year;\n        self.selectingYear = false;\n        self.animate();\n    };\n    \n    this.showYear = function() { \n        self.yearTopIndex = (self.currentMoment.year() - self.yearItems.START) + Math.floor(self.yearItems.PAGE_SIZE / 2);\n        self.yearItems.currentIndex_ = (self.currentMoment.year() - self.yearItems.START) + 1;\n        self.selectingYear = true;\n    };\n    \n    this.showCalendar = function() {\n        self.selectingYear = false;\n    };\n\n    this.cancel = function() {\n        $mdDialog.cancel();\n    };\n\n    this.confirm = function() {\n        $mdDialog.hide(this.currentMoment.toDate());\n    };\n    \n    this.animate = function() {\n        self.animating = true;\n        $timeout(angular.noop).then(function() {\n            self.animating = false;\n        })  \n    };\n}\n\nmodule.provider(\"$mdpDatePicker\", function() {\n    var LABEL_OK = \"ok\",\n        LABEL_CANCEL = \"cancel\"; \n        \n    this.setOKButtonLabel = function(label) {\n        LABEL_OK = label;\n    };\n    \n    this.setCancelButtonLabel = function(label) {\n        LABEL_CANCEL = label;\n    };\n    \n    this.$get = [\"$mdDialog\", function($mdDialog) {\n        var datePicker = function(targetEvent, currentDate) {\n            if(!angular.isDate(currentDate)) currentDate = Date.now();\n    \n            return $mdDialog.show({\n                controller:  ['$scope', '$mdDialog', 'currentDate', '$mdMedia', '$timeout', DatePickerCtrl],\n                controllerAs: 'datepicker',\n                clickOutsideToClose: true,\n                template: '<md-dialog aria-label=\"\" class=\"mdp-datepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\n                            '<md-dialog-content layout=\"row\" layout-wrap>' +\n                                '<div layout=\"column\" layout-align=\"start center\">' +\n                                    '<md-toolbar layout-align=\"start start\" flex class=\"mdp-datepicker-date-wrapper md-hue-1 md-primary\" layout=\"column\">' +\n                                        '<span class=\"mdp-datepicker-year\" ng-click=\"datepicker.showYear()\" ng-class=\"{ \\'active\\': datepicker.selectingYear }\">{{ datepicker.currentMoment.format(\\'YYYY\\') }}</span>' +\n                                        '<span class=\"mdp-datepicker-date\" ng-click=\"datepicker.showCalendar()\" ng-class=\"{ \\'active\\': !datepicker.selectingYear }\">{{ datepicker.currentMoment.format(\"ddd, MMM DD\") }}</span> ' +\n                                    '</md-toolbar>' + \n                                '</div>' +  \n                                '<div>' + \n                                    '<div class=\"mdp-datepicker-select-year mdp-animation-zoom\" layout=\"column\" ng-if=\"datepicker.selectingYear\">' +\n                                        '<md-virtual-repeat-container md-auto-shrink md-top-index=\"datepicker.yearTopIndex\">' +\n                                            '<div flex md-virtual-repeat=\"item in datepicker.yearItems\" md-on-demand class=\"repeated-year\">' +\n                                                '<span class=\"md-button\" ng-click=\"datepicker.selectYear(item)\" md-ink-ripple ng-class=\"{ \\'md-primary current\\': item == year }\">{{ item }}</span>' +\n                                            '</div>' +\n                                        '</md-virtual-repeat-container>' +\n                                    '</div>' +\n                                    '<mdp-calendar ng-if=\"!datepicker.selectingYear\" class=\"mdp-animation-zoom\" date=\"datepicker.currentMoment\"></mdp-calendar>' +\n                                    '<md-dialog-actions layout-align=\"end center\" layout=\"row\">' +\n                                        '<md-button ng-click=\"datepicker.cancel()\" aria-label=\"' + LABEL_CANCEL + '\">' + LABEL_CANCEL + '</md-button>' +\n                                        '<md-button ng-click=\"datepicker.confirm()\" aria-label=\"' + LABEL_OK + '\">' + LABEL_OK + '</md-button>' +\n                                    '</md-dialog-actions>' +\n                                '</div>' +\n                            '</md-dialog-content>' +\n                        '</md-dialog>',\n                targetEvent: targetEvent,\n                locals: {\n                    currentDate: currentDate\n                }\n            });\n        };\n    \n        return datePicker;\n    }];\n});\n\nfunction CalendarCtrl($scope) {\n    var self = this;\n    this.currentMoment;\n    this.weekDays = moment.weekdaysMin();\n    \n    this.getDaysInMonth = function() {\n        var days = self.currentMoment.daysInMonth(),\n            firstDay = moment(self.currentMoment).date(1).day();\n\n        var arr = [];\n        for(var i = 1; i <= (firstDay + days); i++)\n            arr.push(i > firstDay ? (i - firstDay) : false);\n\n        return arr;\n    };\n    \n    this.selectDate = function(dom) {\n        self.currentMoment.date(dom);\n    };\n\n    this.nextMonth = function() {\n        self.currentMoment.add(1, 'months');\n    };\n\n    this.prevMonth = function() {\n        self.currentMoment.subtract(1, 'months');\n    };\n    \n    this.init = function(date) {\n        self.currentMoment = date;\n    };\n}\n\nmodule.directive(\"mdpCalendar\", [\"$animate\", function($animate) {\n    return {\n        restrict: 'E',\n        scope: {\n            \"date\": \"=\"\n        },\n        template: '<div class=\"mdp-calendar\">' +\n                    '<div layout=\"row\" layout-align=\"space-between center\">' +\n                        '<md-button aria-label=\"previous month\" class=\"md-icon-button\" ng-click=\"calendar.prevMonth()\"><md-icon md-font-set=\"material-icons\"> chevron_left </md-icon></md-button>' +\n                        '<div class=\"mdp-calendar-monthyear\" ng-show=\"!calendar.animating\">{{ calendar.currentMoment.format(\"MMMM YYYY\") }}</div>' +\n                        '<md-button aria-label=\"next month\" class=\"md-icon-button\" ng-click=\"calendar.nextMonth()\"><md-icon md-font-set=\"material-icons\"> chevron_right </md-icon></md-button>' +\n                    '</div>' +\n                    '<div layout=\"row\" layout-align=\"space-around center\" class=\"mdp-calendar-week-days\" ng-show=\"!calendar.animating\">' +\n                        '<div layout layout-align=\"center center\" ng-repeat=\"d in calendar.weekDays track by $index\">{{ d }}</div>' +\n                    '</div>' +\n                    '<div layout=\"row\" layout-wrap class=\"mdp-calendar-days\" ng-class=\"{ \\'mdp-animate-next\\': calendar.animating }\" ng-show=\"!calendar.animating\">' +\n                        '<div layout layout-align=\"center center\" ng-repeat-start=\"n in calendar.getDaysInMonth() track by $index\" ng-class=\"{ \\'mdp-day-placeholder\\': n === false }\">' +\n                            '<md-button class=\"md-icon-button md-raised\" aria-label=\"seleziona giorno\" ng-if=\"n !== false\" ng-class=\"{\\'md-accent\\': calendar.currentMoment.date() == n}\" ng-click=\"calendar.selectDate(n)\">{{ n }}</md-button>' +\n                        '</div>' +\n                        '<div flex=\"100\" ng-if=\"($index + 1) % 7 == 0\" ng-repeat-end></div>' +\n                    '</div>' +\n                '</div>',\n        controller: [\"$scope\", CalendarCtrl],\n        controllerAs: \"calendar\",\n        link: function(scope, element, attrs, ctrl) {\n            var animElements = [\n                element[0].querySelector(\".mdp-calendar-week-days\"),\n                element[0].querySelector('.mdp-calendar-days'),\n                element[0].querySelector('.mdp-calendar-monthyear')\n            ];\n            animElements = animElements.map(function(a) {\n               return angular.element(a); \n            });\n                \n            ctrl.init(scope.date);\n            \n            scope.$watch(function() { return  scope.date.format(\"YYYYMM\") }, function(newValue, oldValue) {\n                var direction = null;\n                \n                if(newValue > oldValue)\n                    direction = \"mdp-animate-next\";\n                else if(newValue < oldValue)\n                    direction = \"mdp-animate-prev\";\n                \n                if(direction) {\n                    for(var i in animElements) {\n                        animElements[i].addClass(direction);\n                        $animate.removeClass(animElements[i], direction);\n                    }\n                }\n            });\n        }\n    }\n}]);\n\nmodule.directive(\"mdpDatePicker\", [\"$mdpDatePicker\", \"$timeout\", function($mdpDatePicker, $timeout) {\n    return  {\n        restrict: 'A',\n        require: '?ngModel',\n        link: function(scope, element, attrs, ngModel) {\n            if ('undefined' !== typeof attrs.type && 'date' === attrs.type && ngModel) {\n                angular.element(element).on(\"click\", function(ev) {\n                  \t\tev.preventDefault();\n                      $mdpDatePicker(ev, ngModel.$modelValue).then(function(selectedDate) {\n                          $timeout(function() { \n                            \tngModel.$setViewValue(moment(selectedDate).format(\"YYYY-MM-DD\")); \n                            \tngModel.$render(); \n                          });\n                      });\n                });\n            }\n        }\n    };\n}]);\nfunction TimePickerCtrl($scope, $mdDialog, currentDate, $mdMedia) {\n\tvar self = this;\n    this.VIEW_HOURS = 1;\n    this.VIEW_MINUTES = 2;\n    this.currentDate = currentDate;\n    this.currentView = this.VIEW_HOURS;\n    this.currentMoment = moment(self.currentDate);\n    \n    this.clockHours = parseInt(this.currentMoment.format(\"h\"));\n    this.clockMinutes = parseInt(this.currentMoment.minutes());\n\t\n    $scope.$watch(function() { return self.clockHours }, function(newValue, oldValue) {\n        if(angular.isDefined(oldValue)) {\n            if(self.currentMoment.format(\"A\") == \"AM\")\n                self.currentMoment.hour(self.clockHours);\n            else\n                self.currentMoment.hour(self.clockHours < 12 ? self.clockHours + 12 : self.clockHours);\n        }\n    });\n    \n     $scope.$watch(function() { return self.clockMinutes }, function(newValue, oldValue) {\n        if(angular.isDefined(oldValue)) {\n            self.currentMoment.minutes(newValue < 60 ? newValue : 0);\n        }\n    });\n    \n\t$scope.$mdMedia = $mdMedia;\n    \n\tthis.setAM = function() {\n        if(self.currentMoment.format(\"A\") == \"PM\")\n            self.currentMoment.hour(self.currentMoment.hour() - 12);\n\t};\n    \n    this.setPM = function() {\n        if(self.currentMoment.format(\"A\") == \"AM\")\n            self.currentMoment.hour(self.currentMoment.hour() + 12);\n\t};\n    \n    this.cancel = function() {\n        $mdDialog.cancel();\n    };\n\n    this.confirm = function() {\n        $mdDialog.hide(this.currentMoment.toDate());\n    };\n}\n\nfunction ClockCtrl($scope) {\n    var TYPE_HOURS = \"hours\";\n    var TYPE_MINUTES = \"minutes\";\n    this.ngModel;\n    \n    this.STEP_DEG = 360 / 12;\n    var self = this;\n    this.steps = [];\n    this.selected = 0;\n    \n    this.CLOCK_TYPES = {\n        \"hours\": {\n            range: 12,\n        },\n        \"minutes\": {\n            range: 60,\n        }\n    }\n    \n    this.setTimeByDeg = function(deg) {\n        deg = deg >= 360 ? 0 : deg;\n        var divider = 0;\n        switch(self.type) {\n            case TYPE_HOURS:\n                divider = 12;\n                break;\n            case TYPE_MINUTES:\n                divider = 60;\n                break;\n        }  \n        \n        self.setTime(\n            Math.round(divider / 360 * deg)\n        );\n    };\n    \n    this.getPointerStyle = function() {\n        var divider = 1;\n        switch(self.type) {\n            case TYPE_HOURS:\n                divider = 12;\n                break;\n            case TYPE_MINUTES:\n                divider = 60;\n                break;\n        }  \n        var degrees = Math.round(self.selected * (360 / divider)) - 180;\n        return { \n            \"-webkit-transform\": \"rotate(\" + degrees + \"deg)\",\n            \"-ms-transform\": \"rotate(\" + degrees + \"deg)\",\n            \"transform\": \"rotate(\" + degrees + \"deg)\"\n        }\n    };\n    \n    this.setTime = function(time) {\n        this.selected = time;\n        self.ngModel.$setViewValue(time);\n        self.ngModel.$render();\n    };\n    \n    this.init = function(ngModel, type) {\n        self.type = type;\n        switch(type) {\n            case TYPE_HOURS:\n                for(var i = 1; i <= 12; i++)\n                    self.steps.push(i);\n                    \n                break;\n            case TYPE_MINUTES:\n                for(var i = 5; i <= 55; i+=5)\n                    self.steps.push(i);\n                self.steps.push(0);\n                \n                break;\n                \n        }\n        \n        self.ngModel = ngModel;\n        self.selected = self.ngModel.$modelValue || 0;\n    };\n}\n\nmodule.directive(\"mdpClock\", [\"$animate\", \"$timeout\", function($animate, $timeout) {\n    return {\n        restrict: 'E',\n        require: ['mdpClock', 'ngModel'],\n        scope: {\n            'type': '@?'\n        },\n        replace: true,\n        template: '<div class=\"mdp-clock\">' +\n                        '<div class=\"mdp-clock-container\">' +\n                            '<md-toolbar class=\"mdp-clock-center md-primary\"></md-toolbar>' +\n                            '<md-toolbar ng-style=\"clock.getPointerStyle()\" class=\"mdp-pointer md-primary\">' +\n                                '<span class=\"mdp-clock-selected md-button md-raised md-primary\"></span>' +\n                            '</md-toolbar>' +\n                            '<md-button ng-class=\"{ \\'md-primary\\': clock.selected == step }\" class=\"md-icon-button md-raised mdp-clock-deg{{ ::(clock.STEP_DEG * ($index + 1)) }}\" ng-repeat=\"step in clock.steps\" ng-click=\"clock.setTime(step)\">{{ step }}</md-button>' +\n                        '</div>' +\n                    '</div>',\n        controller: [\"$scope\", ClockCtrl],\n        controllerAs: \"clock\",\n        link: function(scope, element, attrs, ctrls) {\n            var ctrl = ctrls[0],\n                ngModel = ctrls[1];\n                \n            var pointer = angular.element(element[0].querySelector(\".mdp-pointer\"));\n            \n            scope.type = scope.type || \"hours\";\n            $timeout(function() {\n                ctrl.init(ngModel, scope.type);\n            });\n            \n            var onEvent = function(event) {\n                var containerCoords = event.currentTarget.getClientRects()[0];\n                var x = ((event.currentTarget.offsetWidth / 2) - (event.pageX - containerCoords.left)),\n                    y = ((event.pageY - containerCoords.top) - (event.currentTarget.offsetHeight / 2));\n\n                var deg = Math.round((Math.atan2(x, y) * (180 / Math.PI)));\n                $timeout(function() {\n                    ctrl.setTimeByDeg(deg + 180);\n                });\n            }; \n            \n            element.on(\"mousedown\", function() {\n               element.on(\"mousemove\", onEvent);\n            });\n            \n            element.on(\"mouseup mouseleave\", function() {\n               element.off(\"mousemove\", onEvent);\n            });\n            \n            element.on(\"click\", onEvent);\n            scope.$on(\"$destroy\", function() {\n                element.off(\"click\", onEvent);\n                element.off(\"mousemove\", onEvent); \n            });\n        }\n    }\n}]);\n\nmodule.provider(\"$mdpTimePicker\", function() {\n    var LABEL_OK = \"ok\",\n        LABEL_CANCEL = \"cancel\"; \n        \n    this.setOKButtonLabel = function(label) {\n        LABEL_OK = label;\n    };\n    \n    this.setCancelButtonLabel = function(label) {\n        LABEL_CANCEL = label;\n    };\n    \n    this.$get = [\"$mdDialog\", function($mdDialog) {\n        var timePicker = function(targetEvent, currentDate) {\n            if(!angular.isDate(currentDate)) currentDate = Date.now();\n    \n            return $mdDialog.show({\n                controller:  ['$scope', '$mdDialog', 'currentDate', '$mdMedia', TimePickerCtrl],\n                controllerAs: 'timepicker',\n                clickOutsideToClose: true,\n                template: '<md-dialog aria-label=\"\" class=\"mdp-timepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\n                            '<md-dialog-content layout-gt-xs=\"row\" layout-wrap>' +\n                                '<md-toolbar layout-gt-xs=\"column\" layout-xs=\"row\" layout-align=\"center center\" flex class=\"mdp-timepicker-time md-hue-1 md-primary\">' +\n                                    '<div class=\"mdp-timepicker-selected-time\">' +\n                                        '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_HOURS }\" ng-click=\"timepicker.currentView = timepicker.VIEW_HOURS\">{{ timepicker.currentMoment.format(\"h\") }}</span>:' + \n                                        '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_MINUTES }\" ng-click=\"timepicker.currentView = timepicker.VIEW_MINUTES\">{{ timepicker.currentMoment.format(\"mm\") }}</span>' +\n                                    '</div>' +\n                                    '<div layout=\"column\" class=\"mdp-timepicker-selected-ampm\">' + \n                                        '<span ng-click=\"timepicker.setAM()\" ng-class=\"{ \\'active\\': timepicker.currentMoment.format(\\'A\\') == \\'AM\\' }\">AM</span>' +\n                                        '<span ng-click=\"timepicker.setPM()\" ng-class=\"{ \\'active\\': timepicker.currentMoment.format(\\'A\\') == \\'PM\\' }\">PM</span>' +\n                                    '</div>' + \n                                '</md-toolbar>' +\n                                '<div>' +\n                                    '<div class=\"mdp-clock-switch-container\" ng-switch=\"timepicker.currentView\" layout layout-align=\"center center\">' +\n\t\t\t\t\t\t\t\t\t   '<mdp-clock class=\"mdp-animation-zoom\" ng-model=\"timepicker.clockHours\" type=\"hours\" ng-switch-when=\"1\"></mdp-clock>' +\n                                       '<mdp-clock class=\"mdp-animation-zoom\" ng-model=\"timepicker.clockMinutes\" type=\"minutes\" ng-switch-when=\"2\"></mdp-clock>' +\n                                    '</div>' +\n                                    \n                                    '<md-dialog-actions layout-align=\"end center\" layout=\"row\">' +\n                                        '<md-button ng-click=\"timepicker.cancel()\" aria-label=\"' + LABEL_CANCEL + '\">' + LABEL_CANCEL + '</md-button>' +\n                                        '<md-button ng-click=\"timepicker.confirm()\" aria-label=\"' + LABEL_OK + '\">' + LABEL_OK + '</md-button>' +\n                                    '</md-dialog-actions>' +\n                                '</div>' +\n                            '</md-dialog-content>' +\n                        '</md-dialog>',\n                targetEvent: targetEvent,\n                locals: {\n                    currentDate: currentDate\n                }\n            });\n        };\n    \n        return timePicker;\n    }];\n});\n\nmodule.directive(\"mdpTimePicker\", [\"$mdpTimePicker\", \"$timeout\", function($mdpTimePicker, $timeout) {\n    return  {\n        restrict: 'A',\n        require: '?ngModel',\n        link: function(scope, element, attrs, ngModel) {\n            if ('undefined' !== typeof attrs.type && 'time' === attrs.type && ngModel) {\n                angular.element(element).on(\"click\", function(ev) {\n                  \t\tev.preventDefault();\n                      $mdpTimePicker(ev, ngModel.$modelValue).then(function(selectedDate) {\n                          $timeout(function() { \n                            \tngModel.$setViewValue(moment(selectedDate).format(\"HH:mm\")); \n                            \tngModel.$render(); \n                          });\n                      });\n                });\n            }\n        }\n    };\n}]);\n})();"],"sourceRoot":"/source/"}
>>>>>>> master
